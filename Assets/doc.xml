<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Assembly-CSharp</name>
    </assembly>
    <members>
        <member name="P:FSMBase.Name">
             <summary>
             状态机命名
             </summary>
            </member>
        <member name="P:FSMBase.PreFixId">
             <summary>
             前缀ID 和技能组Id相对
             </summary>
            </member>
        <member name="M:FSMBase.OnDataAnalysis(System.Object[])">
             <summary>
             用于解析状态机数据
             </summary>
             <param name="datas"></param>
            </member>
        <member name="T:FSMMgr">
             <summary>
             状态及管理器 用于管理状态机逻辑
             </summary>
            </member>
        <member name="P:FSMMgr.Fsms">
             <summary>
             状态机容器  
             </summary>
            </member>
        <member name="P:FSMMgr.RootState">
             <summary>
             根状态
             </summary>
            </member>
        <member name="P:FSMMgr.CurrentState">
             <summary>
             当前状态
             </summary>
            </member>
        <member name="P:FSMMgr.LastState">
             <summary>
             上一次状态
             </summary>
            </member>
        <member name="M:FSMMgr.RegisterState(FSMBase)">
             <summary>
             注册状态
             </summary>
             <param name="name"></param>
             <param name="fsm"></param>
             <returns></returns>
            </member>
        <member name="M:FSMMgr.RemoveState(System.String)">
             <summary>
             删除状态
             </summary>
             <param name="name"></param>
             <returns></returns>
            </member>
        <member name="M:FSMMgr.GetState(System.String)">
             <summary>
             查找状态机
             </summary>
             <param name="name"></param>
             <returns></returns>
            </member>
        <member name="M:FSMMgr.MoveState(System.String)">
             <summary>
             跳向指定状态
             </summary>
            </member>
        <member name="M:FSMMgr.SetRoot(FSMBase)">
             <summary>
             设置根节点
             </summary>
             <param name="root"></param>
             <returns></returns>
            </member>
        <member name="M:FSMMgr.GetLuaTable(System.String)">
             <summary>
             获取指定状态机Luatable
             </summary>
             <param name="name"></param>
             <returns></returns>
            </member>
        <member name="F:StateController.ID">
             <summary>
             ID
             </summary>
            </member>
        <member name="M:StateController.LateUpdate">
             <summary>
             LateUpdate is called every frame, if the Behaviour is enabled.
             It is called after all Update functions have been called.
             </summary>
            </member>
        <member name="M:StateController.OnTriggerEnter(UnityEngine.Collider)">
             <summary>
             OnTriggerEnter is called when the Collider other enters the trigger.
             </summary>
             <param name="other">The other Collider involved in this collision.</param>
            </member>
        <member name="M:StateController.OnTriggerStay(UnityEngine.Collider)">
             <summary>
             OnTriggerStay is called once per frame for every Collider other
             that is touching the trigger.
             </summary>
             <param name="other">The other Collider involved in this collision.</param>
            </member>
        <member name="M:StateController.OnTriggerExit(UnityEngine.Collider)">
             <summary>
             OnTriggerExit is called when the Collider other has stopped touching the trigger.
             </summary>
             <param name="other">The other Collider involved in this collision.</param>
            </member>
        <member name="M:StateController.OnCollisionEnter(UnityEngine.Collision)">
             <summary>
             OnCollisionEnter is called when this collider/rigidbody has begun
             touching another rigidbody/collider.
             </summary>
             <param name="other">The Collision data associated with this collision.</param>
            </member>
        <member name="M:StateController.OnDisable">
             <summary>
             This function is called when the behaviour becomes disabled or inactive.
             </summary>
            </member>
        <member name="M:StateController.OnBecameVisible">
             <summary>
             OnBecameVisible is called when the renderer became visible by any camera.
             </summary>
            </member>
        <member name="M:StateController.OnDestroy">
             <summary>
             This function is called when the MonoBehaviour will be destroyed.
             </summary>
            </member>
        <member name="M:StateController.RegisterStates">
             <summary>
             连接底层与LUA层的脚本桥梁 
             </summary>
            </member>
        <member name="P:MessageCenter.CenterPool">
             <summary>
             消息池
             </summary>
            </member>
        <member name="M:MessageCenter.FindMessage(System.String)">
             <summary>
             查找消息数据
             </summary>
             <param name="MessageHeader"></param>
             <returns></returns>
            </member>
        <member name="M:MessageCenter.RegisterMessages(System.String,UnityEngine.GameObject,OnMessageEventHandler)">
             <summary>
             注册方法
             </summary>
             <param name="Message">消息头</param>
             <param name="go">消息接收物体</param>
             <param name="eventHandler">事件回调</param>
            </member>
        <member name="M:MessageCenter.FrenchMessages(UnityEngine.GameObject,System.String,System.Object[])">
             <summary>
             调用指定物体的消息回调
             </summary>
             <param name="target"></param>
             <param name="Message"></param>
            </member>
        <member name="M:MessageCenter.BoardCastMessage(System.String,System.Object[])">
             <summary>
             广播消息
             </summary>
             <param name="Message">消息头</param>
             <param name="objects">消息数据</param>
            </member>
        <member name="M:ConfigInfo.BuildLoginConfigRef">
             <summary>
             创建配置文件加载
             </summary>
            </member>
        <member name="M:ConfigInfo.PreLoadConfig(System.String,System.Boolean)">
             <summary>
             预加载功能
             </summary>
             <param name="configName">配置文件名</param>
             <param name="shouldLoad">是否加载</param>
            </member>
        <member name="M:ConfigInfo.RegisterConfigHandler``1(System.String,System.Action{System.Collections.Generic.List{``0}})">
             <summary>
             注册配置文件句柄
             </summary>
             <typeparam name="T">配置文件类型</typeparam>
             <param name="configName">配置文件名</param>
             <param name="handler">数据链句柄</param>
            </member>
        <member name="F:ConfigInfo.configHandlers">
             <summary>
             异步加载配置文件句柄
             </summary>
            </member>
        <member name="M:ConfigInfo.ReadConfigs">
             <summary>
             读取资源表配置
             </summary>
            </member>
        <member name="T:ConfigInfo.ConfigSummary">
             <summary>
             配置信息
             </summary>
            </member>
        <member name="T:SimpleJson.JsonArray">
             <summary>
             Represents the json array.
             </summary>
            </member>
        <member name="M:SimpleJson.JsonArray.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:SimpleJson.JsonArray" /> class. 
             </summary>
            </member>
        <member name="M:SimpleJson.JsonArray.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:SimpleJson.JsonArray" /> class. 
             </summary>
             <param name="capacity">The capacity of the json array.</param>
            </member>
        <member name="M:SimpleJson.JsonArray.ToString">
             <summary>
             The json representation of the array.
             </summary>
             <returns>The json representation of the array.</returns>
            </member>
        <member name="T:SimpleJson.JsonObject">
             <summary>
             Represents the json object.
             </summary>
            </member>
        <member name="F:SimpleJson.JsonObject._members">
             <summary>
             The internal member dictionary.
             </summary>
            </member>
        <member name="M:SimpleJson.JsonObject.#ctor">
             <summary>
             Initializes a new instance of <see cref="T:SimpleJson.JsonObject" />.
             </summary>
            </member>
        <member name="M:SimpleJson.JsonObject.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
             <summary>
             Initializes a new instance of <see cref="T:SimpleJson.JsonObject" />.
             </summary>
             <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> for the type of the key.</param>
            </member>
        <member name="P:SimpleJson.JsonObject.Item(System.Int32)">
             <summary>
             Gets the <see cref="T:System.Object" /> at the specified index.
             </summary>
             <value></value>
            </member>
        <member name="M:SimpleJson.JsonObject.Add(System.String,System.Object)">
             <summary>
             Adds the specified key.
             </summary>
             <param name="key">The key.</param>
             <param name="value">The value.</param>
            </member>
        <member name="M:SimpleJson.JsonObject.ContainsKey(System.String)">
             <summary>
             Determines whether the specified key contains key.
             </summary>
             <param name="key">The key.</param>
             <returns>
                 <c>true</c> if the specified key contains key; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="P:SimpleJson.JsonObject.Keys">
             <summary>
             Gets the keys.
             </summary>
             <value>The keys.</value>
            </member>
        <member name="M:SimpleJson.JsonObject.Remove(System.String)">
             <summary>
             Removes the specified key.
             </summary>
             <param name="key">The key.</param>
             <returns></returns>
            </member>
        <member name="M:SimpleJson.JsonObject.TryGetValue(System.String,System.Object@)">
             <summary>
             Tries the get value.
             </summary>
             <param name="key">The key.</param>
             <param name="value">The value.</param>
             <returns></returns>
            </member>
        <member name="P:SimpleJson.JsonObject.Values">
             <summary>
             Gets the values.
             </summary>
             <value>The values.</value>
            </member>
        <member name="P:SimpleJson.JsonObject.Item(System.String)">
             <summary>
             Gets or sets the <see cref="T:System.Object" /> with the specified key.
             </summary>
             <value></value>
            </member>
        <member name="M:SimpleJson.JsonObject.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
             <summary>
             Adds the specified item.
             </summary>
             <param name="item">The item.</param>
            </member>
        <member name="M:SimpleJson.JsonObject.Clear">
             <summary>
             Clears this instance.
             </summary>
            </member>
        <member name="M:SimpleJson.JsonObject.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
             <summary>
             Determines whether [contains] [the specified item].
             </summary>
             <param name="item">The item.</param>
             <returns>
                 <c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="M:SimpleJson.JsonObject.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
             <summary>
             Copies to.
             </summary>
             <param name="array">The array.</param>
             <param name="arrayIndex">Index of the array.</param>
            </member>
        <member name="P:SimpleJson.JsonObject.Count">
             <summary>
             Gets the count.
             </summary>
             <value>The count.</value>
            </member>
        <member name="P:SimpleJson.JsonObject.IsReadOnly">
             <summary>
             Gets a value indicating whether this instance is read only.
             </summary>
             <value>
                 <c>true</c> if this instance is read only; otherwise, <c>false</c>.
             </value>
            </member>
        <member name="M:SimpleJson.JsonObject.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
             <summary>
             Removes the specified item.
             </summary>
             <param name="item">The item.</param>
             <returns></returns>
            </member>
        <member name="M:SimpleJson.JsonObject.GetEnumerator">
             <summary>
             Gets the enumerator.
             </summary>
             <returns></returns>
            </member>
        <member name="M:SimpleJson.JsonObject.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
            </member>
        <member name="M:SimpleJson.JsonObject.ToString">
             <summary>
             Returns a json <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
             </summary>
             <returns>
             A json <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
             </returns>
            </member>
        <member name="T:SimpleJson.SimpleJson">
             <summary>
             This class encodes and decodes JSON strings.
             Spec. details, see http://www.json.org/
             
             JSON uses Arrays and Objects. These correspond here to the datatypes JsonArray(IList&lt;object&gt;) and JsonObject(IDictionary&lt;string,object&gt;).
             All numbers are parsed to doubles.
             </summary>
            </member>
        <member name="M:SimpleJson.SimpleJson.DeserializeObject(System.String)">
             <summary>
             Parses the string json into a value
             </summary>
             <param name="json">A JSON string.</param>
             <returns>An IList&lt;object&gt;, a IDictionary&lt;string,object&gt;, a double, a string, null, true, or false</returns>
            </member>
        <member name="M:SimpleJson.SimpleJson.TryDeserializeObject(System.String,System.Object@)">
             <summary>
             Try parsing the json string into a value.
             </summary>
             <param name="json">
             A JSON string.
             </param>
             <param name="obj">
             The object.
             </param>
             <returns>
             Returns true if successfull otherwise false.
             </returns>
            </member>
        <member name="M:SimpleJson.SimpleJson.SerializeObject(System.Object,SimpleJson.IJsonSerializerStrategy)">
             <summary>
             Converts a IDictionary&lt;string,object&gt; / IList&lt;object&gt; object into a JSON string
             </summary>
             <param name="json">A IDictionary&lt;string,object&gt; / IList&lt;object&gt;</param>
             <param name="jsonSerializerStrategy">Serializer strategy to use</param>
             <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
            </member>
        <member name="M:SimpleJson.SimpleJson.IsNumeric(System.Object)">
             <summary>
             Determines if a given object is numeric in any way
             (can be integer, double, null, etc).
             </summary>
            </member>
        <member name="M:LitJson.JsonData.ContainsKey(System.String)">
             <summary>
             Determines whether the json contains an element that has the specified key.
             </summary>
             <param name="key">The key to locate in the json.</param>
             <returns>true if the json contains an element that has the specified key; otherwise, false.</returns>
            </member>
        <member name="T:MonoSingleton`1">
             <summary>
             Persistent manager - a singleton component, that will not
             be destroyed between levels.
             </summary>
            </member>
        <member name="M:MonoSingleton`1.Initialize">
             <summary>
             Use this for one time initialization
             </summary>
            </member>
        <member name="T:UnityEngineObjectExtention">
             <summary>
             供LUA调用判断是否为空 请不要直接使用==nil lua中有问题
             </summary>
            </member>
        <member name="F:LoadResources.progressBar">
             <summary>
             进度条显示	
             </summary>
            </member>
        <member name="M:LoadSceneMgr.StartLoadScene(System.String)">
             <summary>
             加载到指定场景
             </summary>
             <param name="sceneName">Scene name.</param>
            </member>
        <member name="M:MakeHotFix.MakeHotFixFuc">
             <summary>
             打热更补丁	
             </summary>
            </member>
        <member name="T:ResourceMgr">
             <summary>
             数据匹配更新
             </summary>
            </member>
        <member name="F:ResourceMgr.url">
             <summary>
             AB下载路径
             </summary>
            </member>
        <member name="F:ResourceMgr.UserAb">
             <summary>
             是否使用AB包加载功能
             </summary>
            </member>
        <member name="F:ResourceMgr.caches资源包缓存">
             <summary>
             键为资源包名 值为资源包对象
             </summary>
            </member>
        <member name="F:ResourceMgr.caches资源包与所有对应的资源数据">
             <summary>
             键为资源包名 值为小字典 小字典中键为 资源名 值为资源路径
             </summary>
            </member>
        <member name="T:ResourceMgr.OnProgressChangeEventHandler">
             <summary>
             进度条变动委托
             </summary>
            </member>
        <member name="T:ResourceMgr.OnProgressContentChangedEventHandler">
             <summary>
             进度数据内容变动委托
             </summary>
            </member>
        <member name="M:ResourceMgr.AddAbToCache(System.String,UnityEngine.AssetBundle)">
             <summary>
             添加资源包数据
             </summary>
             <param name="abName">资源包名</param>
             <param name="ab">资源包</param>
             <returns></returns>
            </member>
        <member name="M:ResourceMgr.GetAbFromCache(System.String)">
             <summary>
             获取资源包数据
             </summary>
             <param name="abName">资源包名</param>
             <returns></returns>
            </member>
        <member name="M:ResourceMgr.AddIntoCacheAssets(System.String,System.String,System.String)">
             <summary>
             很绕但是很重要~~~~ 添加数据到资源缓存
             </summary>
             <param name="AbName"></param>
             <param name="AssetName"></param>
             <param name="AssetPath"></param>
             <returns></returns>
            </member>
        <member name="M:ResourceMgr.DownLoadAssets(System.String,System.String,UnityEngine.Hash128)">
             <summary>
             下载资源并缓存
             </summary>
             <param name="url">服务器地址</param>
             <param name="abName">资源包名</param>
             <param name="hashCode">资源包哈希值</param>
             <returns></returns>
            </member>
        <member name="M:ResourceMgr.LoadlocalResource">
             <summary>
             加载本地资源
             </summary>
             <returns></returns>
            </member>
        <member name="F:ResourceMgr.assetbundleManifest">
            总体资源包配置文件
            </member>
        <member name="M:ResourceMgr.Load(System.String)">
             <summary>
             加载数据
             </summary>
             <returns></returns>
            </member>
        <member name="M:ResourceMgr.Load``1(System.String)">
             <summary>
             泛型
             </summary>
             <typeparam name="T"></typeparam>
             <param name="assetName资源名"></param>
             <returns></returns>
            </member>
        <member name="M:ResourceMgr.CreateObj(System.String)">
             <summary>
             创建游戏物体 指定名字
             </summary>
             <param name="name">资源相对路径</param>
             <returns></returns>
            </member>
        <member name="M:MusicConfig.GetMusic(System.String)">
             <summary>
             获取音乐数据
             </summary>
             <param name="name"></param>
             <returns></returns>
            </member>
        <member name="M:MusicConfig.GetAllMusic">
             <summary>
             获取所有音乐信息
             </summary>
             <returns></returns>
            </member>
        <member name="M:MusicConfig.GetAllMusicWithoutGuides">
             <summary>
             获取所有音乐信息排除引导音乐
             </summary>
             <returns></returns>
            </member>
        <member name="M:Utility.LoadGameObject(System.String,System.Action{UnityEngine.GameObject})">
             <summary>
             Sync Load perfabs
             </summary>
             <param name="path"></param>
             <param name="Callback"></param>
            </member>
        <member name="M:Utility.LoadGameObjectAsync(System.String,System.Action{UnityEngine.GameObject})">
             <summary>
             Async Load perfabs
             </summary>
             <param name="path"></param>
             <param name="Callback"></param>
            </member>
        <member name="M:Utility.SpawnMeshFromBottomPoints(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.GameObject)">
             <summary>
             Spawns the mesh from bottom points.
             </summary>
             <returns>center of bottom</returns>
             <param name="posList">Position list.</param>
            </member>
        <member name="M:Utility.StartSceneCoroutine(CoroutineAction,System.Boolean)">
             <summary>
             会随着场景切换而清理的coroutine
             </summary>
             <param name="co">Co.</param>
            </member>
        <member name="M:Utility.StartSceneCoroutine``2(CoroutineAction{``0,``1},``0,``1,System.Boolean)">
             <summary>
             会随着场景切换而清理的coroutine
             </summary>
             <param name="co">Co.</param>
            </member>
        <member name="M:Utility.GetTimeByFixedFrame(System.Single)">
             <summary>
             手动清理的coroutine ; destroy gameObject 以停止
             </summary>
             <param name="co">Co.</param>
            </member>
        <member name="M:Utility.createObj(UnityEngine.Transform,UnityEngine.GameObject,System.Boolean,System.String)">
             <summary>
             创建单一对象
             </summary>
             <param name="parent"></param>
             <param name="itemPre"></param>
             <param name="switchFlag"></param>
             <param name="name"></param>
             <returns></returns>
            </member>
        <member name="M:Utility.createObjCallBack(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.GameObject,System.Boolean,System.String,System.Action{UnityEngine.GameObject})">
             <summary>
             带回调的创建对象
             </summary>
             <param name="parent"></param>
             <param name="scale"></param>
             <param name="position"></param>
             <param name="rotation"></param>
             <param name="itemPre"></param>
             <param name="switchFlag"></param>
             <param name="name"></param>
             <param name="callback"></param>
            </member>
        <member name="M:Utility.CreateObjectCallback(UnityEngine.Transform,UnityEngine.GameObject,System.Boolean,System.String,System.Action{UnityEngine.GameObject})">
             <summary>
             创建格子
             </summary>
             <param name="parent"></param>
             <param name="itemPre"></param>
             <param name="switchFlag"></param>
             <param name="name"></param>
             <param name="callback"></param>
            </member>
        <member name="M:Utility.IntilizationBlocks``1(``0,System.Int32,UnityEngine.GameObject,System.Collections.Generic.List{UnityEngine.GameObject},System.Boolean,System.Action{``0})">
             <summary>
             生成格子
             </summary>
             <typeparam name="T"></typeparam>
             <param name="parent"></param>
             <param name="number"></param>
             <param name="itemPre"></param>
             <param name="list"></param>
             <param name="switchFlag"></param>
             <param name="callback"></param>
             
            </member>
        <member name="M:Utility.ActiveAllObjects``1(``0,System.Boolean)">
             <summary>
             激活传递GameObjects
             </summary>
             <param name="collection"></param>
            </member>
        <member name="M:Utility.RigisterAnimationEvent(UnityEngine.Animator,System.String,System.String,System.Single,System.String)">
             <summary>
             动态添加动画事件
             </summary>
             <param name="animationName">动画状态名称</param>
             <param name="funName">动画事件名</param>
             <param name="time">动画百分比</param>
             <param name="obj">参数</param>
            </member>
        <member name="M:Utility.GetPosV4(System.String)">
             <summary>
             传入字符串获取V4
             </summary>
             <param name="pos"></param>
             <returns></returns>
            </member>
        <member name="M:Utility.GetPosV3(System.String)">
             <summary>
             传入字符串获取V3
             </summary>
             <param name="pos"></param>
             <returns></returns>
            </member>
        <member name="M:Utility.GetPosV2(System.String)">
             <summary>
             传入字符串获取V2
             </summary>
             <param name="pos"></param>
             <returns></returns>
            </member>
        <member name="M:Utility.FindChild(UnityEngine.Transform,System.String)">
             <summary>
             查找子物体（递归查找）  
             </summary> 
             <param name="trans">父物体</param>
             <param name="goName">子物体的名称</param>
             <returns>找到的相应子物体</returns>
            </member>
        <member name="M:Utility.FindChild``1(UnityEngine.Transform,System.String)">
             <summary>
             查找子物体（递归查找）  where T : UnityEngine.Object
             </summary> 
             <param name="trans">父物体</param>
             <param name="goName">子物体的名称</param>
             <returns>找到的相应子物体</returns>
            </member>
        <member name="T:EventDelegate">
             <summary>
             Delegate callback that Unity can serialize and set via Inspector.
             </summary>
            </member>
        <member name="T:EventDelegate.Parameter">
             <summary>
             Delegates can have parameters, and this class makes it possible to save references to properties
             that can then be passed as function arguments, such as transform.position or widget.color.
             </summary>
            </member>
        <member name="P:EventDelegate.Parameter.value">
             <summary>
             Return the property's current value.
             </summary>
            </member>
        <member name="P:EventDelegate.Parameter.type">
             <summary>
             Parameter type -- a convenience function.
             </summary>
            </member>
        <member name="F:EventDelegate.oneShot">
             <summary>
             Whether the event delegate will be removed after execution.
             </summary>
            </member>
        <member name="P:EventDelegate.target">
             <summary>
             Event delegate's target object.
             </summary>
            </member>
        <member name="P:EventDelegate.methodName">
             <summary>
             Event delegate's method name.
             </summary>
            </member>
        <member name="P:EventDelegate.parameters">
             <summary>
             Optional parameters if the method requires them.
             </summary>
            </member>
        <member name="P:EventDelegate.isValid">
             <summary>
             Whether this delegate's values have been set.
             </summary>
            </member>
        <member name="P:EventDelegate.isEnabled">
             <summary>
             Whether the target script is actually enabled.
             </summary>
            </member>
        <member name="M:EventDelegate.GetMethodName(EventDelegate.Callback)">
             <summary>
             GetMethodName is not supported on some platforms.
             </summary>
            </member>
        <member name="M:EventDelegate.Equals(System.Object)">
             <summary>
             Equality operator.
             </summary>
            </member>
        <member name="M:EventDelegate.GetHashCode">
             <summary>
             Used in equality operators.
             </summary>
            </member>
        <member name="M:EventDelegate.Set(EventDelegate.Callback)">
             <summary>
             Set the delegate callback directly.
             </summary>
            </member>
        <member name="M:EventDelegate.Set(UnityEngine.MonoBehaviour,System.String)">
             <summary>
             Set the delegate callback using the target and method names.
             </summary>
            </member>
        <member name="M:EventDelegate.Cache">
             <summary>
             Cache the callback and create the list of the necessary parameters.
             </summary>
            </member>
        <member name="M:EventDelegate.Execute">
             <summary>
             Execute the delegate, if possible.
             This will only be used when the application is playing in order to prevent unintentional state changes.
             </summary>
            </member>
        <member name="M:EventDelegate.Clear">
             <summary>
             Clear the event delegate.
             </summary>
            </member>
        <member name="M:EventDelegate.ToString">
             <summary>
             Convert the delegate to its string representation.
             </summary>
            </member>
        <member name="M:EventDelegate.Execute(System.Collections.Generic.List{EventDelegate})">
             <summary>
             Execute an entire list of delegates.
             </summary>
            </member>
        <member name="M:EventDelegate.IsValid(System.Collections.Generic.List{EventDelegate})">
             <summary>
             Convenience function to check if the specified list of delegates can be executed.
             </summary>
            </member>
        <member name="M:EventDelegate.Set(System.Collections.Generic.List{EventDelegate},EventDelegate.Callback)">
             <summary>
             Assign a new event delegate.
             </summary>
            </member>
        <member name="M:EventDelegate.Set(System.Collections.Generic.List{EventDelegate},EventDelegate)">
             <summary>
             Assign a new event delegate.
             </summary>
            </member>
        <member name="M:EventDelegate.Add(System.Collections.Generic.List{EventDelegate},EventDelegate.Callback)">
             <summary>
             Append a new event delegate to the list.
             </summary>
            </member>
        <member name="M:EventDelegate.Add(System.Collections.Generic.List{EventDelegate},EventDelegate.Callback,System.Boolean)">
             <summary>
             Append a new event delegate to the list.
             </summary>
            </member>
        <member name="M:EventDelegate.Add(System.Collections.Generic.List{EventDelegate},EventDelegate)">
             <summary>
             Append a new event delegate to the list.
             </summary>
            </member>
        <member name="M:EventDelegate.Add(System.Collections.Generic.List{EventDelegate},EventDelegate,System.Boolean)">
             <summary>
             Append a new event delegate to the list.
             </summary>
            </member>
        <member name="M:EventDelegate.Remove(System.Collections.Generic.List{EventDelegate},EventDelegate.Callback)">
             <summary>
             Remove an existing event delegate from the list.
             </summary>
            </member>
        <member name="M:EventDelegate.Remove(System.Collections.Generic.List{EventDelegate},EventDelegate)">
             <summary>
             Remove an existing event delegate from the list.
             </summary>
            </member>
        <member name="T:NGUIMath">
             <summary>
             Helper class containing generic functions used throughout the UI library.
             </summary>
            </member>
        <member name="M:NGUIMath.Lerp(System.Single,System.Single,System.Single)">
             <summary>
             Lerp function that doesn't clamp the 'factor' in 0-1 range.
             </summary>
            </member>
        <member name="M:NGUIMath.ClampIndex(System.Int32,System.Int32)">
             <summary>
             Clamp the specified integer to be between 0 and below 'max'.
             </summary>
            </member>
        <member name="M:NGUIMath.RepeatIndex(System.Int32,System.Int32)">
             <summary>
             Wrap the index using repeating logic, so that for example +1 past the end means index of '1'.
             </summary>
            </member>
        <member name="M:NGUIMath.WrapAngle(System.Single)">
             <summary>
             Ensure that the angle is within -180 to 180 range.
             </summary>
            </member>
        <member name="M:NGUIMath.Wrap01(System.Single)">
             <summary>
             In the shader, equivalent function would be 'fract'
             </summary>
            </member>
        <member name="M:NGUIMath.HexToDecimal(System.Char)">
             <summary>
             Convert a hexadecimal character to its decimal value.
             </summary>
            </member>
        <member name="M:NGUIMath.DecimalToHexChar(System.Int32)">
             <summary>
             Convert a single 0-15 value into its hex representation.
             It's coded because int.ToString(format) syntax doesn't seem to be supported by Unity's Flash. It just silently crashes.
             </summary>
            </member>
        <member name="M:NGUIMath.DecimalToHex8(System.Int32)">
             <summary>
             Convert a decimal value to its hex representation.
             </summary>
            </member>
        <member name="M:NGUIMath.DecimalToHex24(System.Int32)">
             <summary>
             Convert a decimal value to its hex representation.
             It's coded because num.ToString("X6") syntax doesn't seem to be supported by Unity's Flash. It just silently crashes.
             string.Format("{0,6:X}", num).Replace(' ', '0') doesn't work either. It returns the format string, not the formatted value.
             </summary>
            </member>
        <member name="M:NGUIMath.DecimalToHex32(System.Int32)">
             <summary>
             Convert a decimal value to its hex representation.
             It's coded because num.ToString("X6") syntax doesn't seem to be supported by Unity's Flash. It just silently crashes.
             string.Format("{0,6:X}", num).Replace(' ', '0') doesn't work either. It returns the format string, not the formatted value.
             </summary>
            </member>
        <member name="M:NGUIMath.ColorToInt(UnityEngine.Color)">
             <summary>
             Convert the specified color to RGBA32 integer format.
             </summary>
            </member>
        <member name="M:NGUIMath.IntToColor(System.Int32)">
             <summary>
             Convert the specified RGBA32 integer to Color.
             </summary>
            </member>
        <member name="M:NGUIMath.IntToBinary(System.Int32,System.Int32)">
             <summary>
             Convert the specified integer to a human-readable string representing the binary value. Useful for debugging bytes.
             </summary>
            </member>
        <member name="M:NGUIMath.HexToColor(System.UInt32)">
             <summary>
             Convenience conversion function, allowing hex format (0xRrGgBbAa).
             </summary>
            </member>
        <member name="M:NGUIMath.ConvertToTexCoords(UnityEngine.Rect,System.Int32,System.Int32)">
             <summary>
             Convert from top-left based pixel coordinates to bottom-left based UV coordinates.
             </summary>
            </member>
        <member name="M:NGUIMath.ConvertToPixels(UnityEngine.Rect,System.Int32,System.Int32,System.Boolean)">
             <summary>
             Convert from bottom-left based UV coordinates to top-left based pixel coordinates.
             </summary>
            </member>
        <member name="M:NGUIMath.MakePixelPerfect(UnityEngine.Rect)">
             <summary>
             Round the pixel rectangle's dimensions.
             </summary>
            </member>
        <member name="M:NGUIMath.MakePixelPerfect(UnityEngine.Rect,System.Int32,System.Int32)">
             <summary>
             Round the texture coordinate rectangle's dimensions.
             </summary>
            </member>
        <member name="M:NGUIMath.ConstrainRect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
             <summary>
             Constrain 'rect' to be within 'area' as much as possible, returning the Vector2 offset necessary for this to happen.
             This function is useful when trying to restrict one area (window) to always be within another (viewport).
             </summary>
            </member>
        <member name="M:NGUIMath.SpringDampen(UnityEngine.Vector3@,System.Single,System.Single)">
             <summary>
             This code is not framerate-independent:
             
             target.position += velocity;
             velocity = Vector3.Lerp(velocity, Vector3.zero, Time.deltaTime * 9f);
             
             But this code is:
             
             target.position += NGUIMath.SpringDampen(ref velocity, 9f, Time.deltaTime);
             </summary>
            </member>
        <member name="M:NGUIMath.SpringDampen(UnityEngine.Vector2@,System.Single,System.Single)">
             <summary>
             Same as the Vector3 version, it's a framerate-independent Lerp.
             </summary>
            </member>
        <member name="M:NGUIMath.SpringLerp(System.Single,System.Single)">
             <summary>
             Calculate how much to interpolate by.
             </summary>
            </member>
        <member name="M:NGUIMath.SpringLerp(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Mathf.Lerp(from, to, Time.deltaTime * strength) is not framerate-independent. This function is.
             </summary>
            </member>
        <member name="M:NGUIMath.SpringLerp(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single)">
             <summary>
             Vector2.Lerp(from, to, Time.deltaTime * strength) is not framerate-independent. This function is.
             </summary>
            </member>
        <member name="M:NGUIMath.SpringLerp(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
             <summary>
             Vector3.Lerp(from, to, Time.deltaTime * strength) is not framerate-independent. This function is.
             </summary>
            </member>
        <member name="M:NGUIMath.SpringLerp(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single,System.Single)">
             <summary>
             Quaternion.Slerp(from, to, Time.deltaTime * strength) is not framerate-independent. This function is.
             </summary>
            </member>
        <member name="M:NGUIMath.RotateTowards(System.Single,System.Single,System.Single)">
             <summary>
             Since there is no Mathf.RotateTowards...
             </summary>
            </member>
        <member name="M:NGUIMath.DistancePointToLineSegment(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
             <summary>
             Determine the distance from the specified point to the line segment.
             </summary>
            </member>
        <member name="M:NGUIMath.DistanceToRectangle(UnityEngine.Vector2[],UnityEngine.Vector2)">
             <summary>
             Determine the distance from the mouse position to the screen space rectangle specified by the 4 points.
             </summary>
            </member>
        <member name="M:NGUIMath.DistanceToRectangle(UnityEngine.Vector3[],UnityEngine.Vector2,UnityEngine.Camera)">
             <summary>
             Determine the distance from the mouse position to the world rectangle specified by the 4 points.
             </summary>
            </member>
        <member name="M:NGUIMath.AdjustByDPI(System.Single)">
             <summary>
             Adjust the specified value by DPI: height * 96 / DPI.
             This will result in in a smaller value returned for higher pixel density devices.
             </summary>
            </member>
        <member name="M:NGUIMath.WorldToLocalPoint(UnityEngine.Vector3,UnityEngine.Camera,UnityEngine.Camera,UnityEngine.Transform)">
             <summary>
             Convert the specified world point from one camera's world space to another, then make it relative to the specified transform.
             You should use this function if you want to position a widget using some 3D point in space.
             Pass your main camera for the "worldCam", and your UI camera for "uiCam", then the widget's transform for "relativeTo".
             You can then assign the widget's localPosition to the returned value.
             </summary>
            </member>
        <member name="M:NGUIMath.OverlayPosition(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Camera,UnityEngine.Camera)">
             <summary>
             Helper function that can set the transform's position to be at the specified world position.
             Ideal usage: positioning a UI element to be directly over a 3D point in space.
             </summary>
             <param name="worldPos">World position, visible by the worldCam</param>
             <param name="worldCam">Camera that is able to see the worldPos</param>
             <param name="myCam">Camera that is able to see the transform this function is called on</param>
            </member>
        <member name="T:NGUITools">
             <summary>
             Helper class containing generic functions used throughout the UI library.
             </summary>
            </member>
        <member name="P:NGUITools.soundVolume">
             <summary>
             Globally accessible volume affecting all sounds played via NGUITools.PlaySound().
             </summary>
            </member>
        <member name="P:NGUITools.fileAccess">
             <summary>
             Helper function -- whether the disk access is allowed.
             </summary>
            </member>
        <member name="M:NGUITools.PlaySound(UnityEngine.AudioClip)">
             <summary>
             Play the specified audio clip.
             </summary>
            </member>
        <member name="M:NGUITools.PlaySound(UnityEngine.AudioClip,System.Single)">
             <summary>
             Play the specified audio clip with the specified volume.
             </summary>
            </member>
        <member name="M:NGUITools.PlaySound(UnityEngine.AudioClip,System.Single,System.Single)">
             <summary>
             Play the specified audio clip with the specified volume and pitch.
             </summary>
            </member>
        <member name="M:NGUITools.RandomRange(System.Int32,System.Int32)">
             <summary>
             New WWW call can fail if the crossdomain policy doesn't check out. Exceptions suck. It's much more elegant to check for null instead.
             </summary>
            </member>
        <member name="M:NGUITools.GetHierarchy(UnityEngine.GameObject)">
             <summary>
             Returns the hierarchy of the object in a human-readable format.
             </summary>
            </member>
        <member name="M:NGUITools.FindActive``1">
             <summary>
             Find all active objects of specified type.
             </summary>
            </member>
        <member name="M:NGUITools.GetTypeName``1">
             <summary>
             Helper function that returns the string name of the type.
             </summary>
            </member>
        <member name="M:NGUITools.GetTypeName(UnityEngine.Object)">
             <summary>
             Helper function that returns the string name of the type.
             </summary>
            </member>
        <member name="M:NGUITools.RegisterUndo(UnityEngine.Object,System.String)">
             <summary>
             Convenience method that works without warnings in both Unity 3 and 4.
             </summary>
            </member>
        <member name="M:NGUITools.SetDirty(UnityEngine.Object)">
             <summary>
             Convenience function that marks the specified object as dirty in the Unity Editor.
             </summary>
            </member>
        <member name="M:NGUITools.AddChild(UnityEngine.GameObject)">
             <summary>
             Add a new child game object.
             </summary>
            </member>
        <member name="M:NGUITools.AddChild(UnityEngine.GameObject,System.Int32)">
             <summary>
             Add a new child game object.
             </summary>
            </member>
        <member name="M:NGUITools.AddChild(UnityEngine.GameObject,System.Boolean)">
             <summary>
             Add a new child game object.
             </summary>
            </member>
        <member name="M:NGUITools.AddChild(UnityEngine.GameObject,System.Boolean,System.Int32)">
             <summary>
             Add a new child game object.
             </summary>
            </member>
        <member name="M:NGUITools.AddChild(UnityEngine.GameObject,UnityEngine.GameObject)">
             <summary>
             Instantiate an object and add it to the specified parent.
             </summary>
            </member>
        <member name="M:NGUITools.AddChild(UnityEngine.GameObject,UnityEngine.GameObject,System.Int32)">
             <summary>
             Instantiate an object and add it to the specified parent.
             </summary>
            </member>
        <member name="M:NGUITools.SetChildLayer(UnityEngine.Transform,System.Int32)">
             <summary>
             Helper function that recursively sets all children with widgets' game objects layers to the specified value.
             </summary>
            </member>
        <member name="M:NGUITools.AddChild``1(UnityEngine.GameObject)">
             <summary>
             Add a child object to the specified parent and attaches the specified script to it.
             </summary>
            </member>
        <member name="M:NGUITools.AddChild``1(UnityEngine.GameObject,System.Boolean)">
             <summary>
             Add a child object to the specified parent and attaches the specified script to it.
             </summary>
            </member>
        <member name="M:NGUITools.GetRoot(UnityEngine.GameObject)">
             <summary>
             Get the rootmost object of the specified game object.
             </summary>
            </member>
        <member name="M:NGUITools.FindInParents``1(UnityEngine.GameObject)">
             <summary>
             Finds the specified component on the game object or one of its parents.
             This function has become obsolete with Unity 4.3.
             </summary>
            </member>
        <member name="M:NGUITools.FindInParents``1(UnityEngine.Transform)">
             <summary>
             Finds the specified component on the game object or one of its parents.
             This function has become obsolete with Unity 4.3.
             </summary>
            </member>
        <member name="M:NGUITools.Destroy(UnityEngine.Object)">
             <summary>
             Destroy the specified object, immediately if in edit mode.
             </summary>
            </member>
        <member name="M:NGUITools.DestroyChildren(UnityEngine.Transform)">
             <summary>
             Convenience extension that destroys all children of the transform.
             </summary>
            </member>
        <member name="M:NGUITools.DestroyImmediate(UnityEngine.Object)">
             <summary>
             Destroy the specified object immediately, unless not in the editor, in which case the regular Destroy is used instead.
             </summary>
            </member>
        <member name="M:NGUITools.Broadcast(System.String)">
             <summary>
             Call the specified function on all objects in the scene.
             </summary>
            </member>
        <member name="M:NGUITools.Broadcast(System.String,System.Object)">
             <summary>
             Call the specified function on all objects in the scene.
             </summary>
            </member>
        <member name="M:NGUITools.IsChild(UnityEngine.Transform,UnityEngine.Transform)">
             <summary>
             Determines whether the 'parent' contains a 'child' in its hierarchy.
             </summary>
            </member>
        <member name="M:NGUITools.Activate(UnityEngine.Transform)">
             <summary>
             Activate the specified object and all of its children.
             </summary>
            </member>
        <member name="M:NGUITools.Activate(UnityEngine.Transform,System.Boolean)">
             <summary>
             Activate the specified object and all of its children.
             </summary>
            </member>
        <member name="M:NGUITools.Deactivate(UnityEngine.Transform)">
             <summary>
             Deactivate the specified object and all of its children.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:NGUITools.SetActiveChildren(UnityEngine.GameObject,System.Boolean)-->
        <member name="M:NGUITools.IsActive(UnityEngine.Behaviour)">
             <summary>
             Helper function that returns whether the specified MonoBehaviour is active.
             </summary>
            </member>
        <member name="M:NGUITools.GetActive(UnityEngine.Behaviour)">
             <summary>
             Helper function that returns whether the specified MonoBehaviour is active.
             </summary>
            </member>
        <member name="M:NGUITools.GetActive(UnityEngine.GameObject)">
             <summary>
             Unity4 has changed GameObject.active to GameObject.activeself.
             </summary>
            </member>
        <member name="M:NGUITools.SetActiveSelf(UnityEngine.GameObject,System.Boolean)">
             <summary>
             Unity4 has changed GameObject.active to GameObject.SetActive.
             </summary>
            </member>
        <member name="M:NGUITools.SetLayer(UnityEngine.GameObject,System.Int32)">
             <summary>
             Recursively set the game object's layer.
             </summary>
            </member>
        <member name="M:NGUITools.Round(UnityEngine.Vector3)">
             <summary>
             Helper function used to make the vector use integer numbers.
             </summary>
            </member>
        <member name="M:NGUITools.Save(System.String,System.Byte[])">
             <summary>
             Save the specified binary data into the specified file.
             </summary>
            </member>
        <member name="M:NGUITools.Load(System.String)">
             <summary>
             Load all binary data from the specified file.
             </summary>
            </member>
        <member name="M:NGUITools.ApplyPMA(UnityEngine.Color)">
             <summary>
             Pre-multiply shaders result in a black outline if this operation is done in the shader. It's better to do it outside.
             </summary>
            </member>
        <member name="P:NGUITools.clipboard">
             <summary>
             Access to the clipboard via undocumented APIs.
             </summary>
            </member>
        <member name="M:NGUITools.GetSides(UnityEngine.Camera)">
             <summary>
             Get sides relative to the specified camera. The order is left, top, right, bottom.
             </summary>
            </member>
        <member name="M:NGUITools.GetSides(UnityEngine.Camera,System.Single)">
             <summary>
             Get sides relative to the specified camera. The order is left, top, right, bottom.
             </summary>
            </member>
        <member name="M:NGUITools.GetSides(UnityEngine.Camera,UnityEngine.Transform)">
             <summary>
             Get sides relative to the specified camera. The order is left, top, right, bottom.
             </summary>
            </member>
        <member name="M:NGUITools.GetSides(UnityEngine.Camera,System.Single,UnityEngine.Transform)">
             <summary>
             Get sides relative to the specified camera. The order is left, top, right, bottom.
             </summary>
            </member>
        <member name="M:NGUITools.GetWorldCorners(UnityEngine.Camera)">
             <summary>
             Get the camera's world-space corners. The order is bottom-left, top-left, top-right, bottom-right.
             </summary>
            </member>
        <member name="M:NGUITools.GetWorldCorners(UnityEngine.Camera,System.Single)">
             <summary>
             Get the camera's world-space corners. The order is bottom-left, top-left, top-right, bottom-right.
             </summary>
            </member>
        <member name="M:NGUITools.GetWorldCorners(UnityEngine.Camera,UnityEngine.Transform)">
             <summary>
             Get the camera's world-space corners. The order is bottom-left, top-left, top-right, bottom-right.
             </summary>
            </member>
        <member name="M:NGUITools.GetWorldCorners(UnityEngine.Camera,System.Single,UnityEngine.Transform)">
             <summary>
             Get the camera's world-space corners. The order is bottom-left, top-left, top-right, bottom-right.
             </summary>
            </member>
        <member name="M:NGUITools.GetFuncName(System.Object,System.String)">
             <summary>
             Convenience function that converts Class + Function combo into Class.Function representation.
             </summary>
            </member>
        <member name="M:NGUITools.Execute``1(UnityEngine.GameObject,System.String)">
             <summary>
             Execute the specified function on the target game object.
             </summary>
            </member>
        <member name="M:NGUITools.ExecuteAll``1(UnityEngine.GameObject,System.String)">
             <summary>
             Execute the specified function on the target game object and all of its children.
             </summary>
            </member>
        <member name="P:NGUITools.screenSize">
             <summary>
             Size of the game view cannot be retrieved from Screen.width and Screen.height when the game view is hidden.
             </summary>
            </member>
        <member name="F:NGUITools.keys">
             <summary>
             List of keys that can be checked.
             </summary>
            </member>
        <member name="M:NGUITools.KeyToCaption(UnityEngine.KeyCode)">
             <summary>
             Helper function that converts the specified key to a 3-character key identifier for captions.
             </summary>
            </member>
        <member name="M:NGUITools.GammaToLinearSpace(UnityEngine.Color)">
             <summary>
             Transforms this color from gamma to linear space, but only if the active color space is actually set to linear.
             </summary>
            </member>
        <member name="T:PropertyReference">
             <summary>
             Reference to a specific field or property that can be set via inspector.
             </summary>
            </member>
        <member name="P:PropertyReference.target">
             <summary>
             Event delegate's target object.
             </summary>
            </member>
        <member name="P:PropertyReference.name">
             <summary>
             Event delegate's method name.
             </summary>
            </member>
        <member name="P:PropertyReference.isValid">
             <summary>
             Whether this delegate's values have been set.
             </summary>
            </member>
        <member name="P:PropertyReference.isEnabled">
             <summary>
             Whether the target script is actually enabled.
             </summary>
            </member>
        <member name="M:PropertyReference.GetPropertyType">
             <summary>
             Helper function that returns the property type.
             </summary>
            </member>
        <member name="M:PropertyReference.Equals(System.Object)">
             <summary>
             Equality operator.
             </summary>
            </member>
        <member name="M:PropertyReference.GetHashCode">
             <summary>
             Used in equality operators.
             </summary>
            </member>
        <member name="M:PropertyReference.Set(UnityEngine.Component,System.String)">
             <summary>
             Set the delegate callback using the target and method names.
             </summary>
            </member>
        <member name="M:PropertyReference.Clear">
             <summary>
             Clear the event delegate.
             </summary>
            </member>
        <member name="M:PropertyReference.Reset">
             <summary>
             Reset the cached references.
             </summary>
            </member>
        <member name="M:PropertyReference.ToString">
             <summary>
             Convert the delegate to its string representation.
             </summary>
            </member>
        <member name="M:PropertyReference.ToString(UnityEngine.Component,System.String)">
             <summary>
             Convenience function that converts the specified component + property pair into its string representation.
             </summary>
            </member>
        <member name="M:PropertyReference.Get">
             <summary>
             Retrieve the property's value.
             </summary>
            </member>
        <member name="M:PropertyReference.Set(System.Object)">
             <summary>
             Assign the bound property's value.
             </summary>
            </member>
        <member name="M:PropertyReference.Cache">
             <summary>
             Cache the field or property.
             </summary>
            </member>
        <member name="M:PropertyReference.Convert(System.Object@)">
             <summary>
             Whether we can assign the property using the specified value.
             </summary>
            </member>
        <member name="M:PropertyReference.Convert(System.Type,System.Type)">
             <summary>
             Whether we can convert one type to another for assignment purposes.
             </summary>
            </member>
        <member name="M:PropertyReference.Convert(System.Object,System.Type)">
             <summary>
             Whether we can convert one type to another for assignment purposes.
             </summary>
            </member>
        <member name="M:PropertyReference.Convert(System.Object@,System.Type,System.Type)">
             <summary>
             Whether we can convert one type to another for assignment purposes.
             </summary>
            </member>
        <member name="T:RealTime">
             <summary>
             Time class has no timeScale-independent time. This class fixes that.
             </summary>
            </member>
        <member name="P:RealTime.time">
             <summary>
             Real time since startup.
             </summary>
            </member>
        <member name="P:RealTime.deltaTime">
             <summary>
             Real delta time.
             </summary>
            </member>
        <member name="T:UITweener">
             <summary>
             Base class for all tweening operations.
             </summary>
            </member>
        <member name="F:UITweener.current">
             <summary>
             Current tween that triggered the callback function.
             </summary>
            </member>
        <member name="F:UITweener.method">
             <summary>
             Tweening method used.
             </summary>
            </member>
        <member name="F:UITweener.style">
             <summary>
             Does it play once? Does it loop?
             </summary>
            </member>
        <member name="F:UITweener.animationCurve">
             <summary>
             Optional curve to apply to the tween's time factor value.
             </summary>
            </member>
        <member name="F:UITweener.ignoreTimeScale">
             <summary>
             Whether the tween will ignore the timescale, making it work while the game is paused.
             </summary>
            </member>
        <member name="F:UITweener.delay">
             <summary>
             How long will the tweener wait before starting the tween?
             </summary>
            </member>
        <member name="F:UITweener.duration">
             <summary>
             How long is the duration of the tween?
             </summary>
            </member>
        <member name="F:UITweener.steeperCurves">
             <summary>
             Whether the tweener will use steeper curves for ease in / out style interpolation.
             </summary>
            </member>
        <member name="F:UITweener.tweenGroup">
             <summary>
             Used by buttons and tween sequences. Group of '0' means not in a sequence.
             </summary>
            </member>
        <member name="F:UITweener.onFinished">
             <summary>
             Event delegates called when the animation finishes.
             </summary>
            </member>
        <member name="P:UITweener.amountPerDelta">
             <summary>
             Amount advanced per delta time.
             </summary>
            </member>
        <member name="P:UITweener.tweenFactor">
             <summary>
             Tween factor, 0-1 range.
             </summary>
            </member>
        <member name="P:UITweener.direction">
             <summary>
             Direction that the tween is currently playing in.
             </summary>
            </member>
        <member name="M:UITweener.Reset">
             <summary>
             This function is called by Unity when you add a component. Automatically set the starting values for convenience.
             </summary>
            </member>
        <member name="M:UITweener.Start">
             <summary>
             Update as soon as it's started so that there is no delay.
             </summary>
            </member>
        <member name="M:UITweener.DoUpdate">
             <summary>
             Update the tweening factor and call the virtual update function.
             </summary>
            </member>
        <member name="M:UITweener.SetOnFinished(EventDelegate.Callback)">
             <summary>
             Convenience function -- set a new OnFinished event delegate (here for to be consistent with RemoveOnFinished).
             </summary>
            </member>
        <member name="M:UITweener.SetOnFinished(EventDelegate)">
             <summary>
             Convenience function -- set a new OnFinished event delegate (here for to be consistent with RemoveOnFinished).
             </summary>
            </member>
        <member name="M:UITweener.AddOnFinished(EventDelegate.Callback)">
             <summary>
             Convenience function -- add a new OnFinished event delegate (here for to be consistent with RemoveOnFinished).
             </summary>
            </member>
        <member name="M:UITweener.AddOnFinished(EventDelegate)">
             <summary>
             Convenience function -- add a new OnFinished event delegate (here for to be consistent with RemoveOnFinished).
             </summary>
            </member>
        <member name="M:UITweener.RemoveOnFinished(EventDelegate)">
             <summary>
             Remove an OnFinished delegate. Will work even while iterating through the list when the tweener has finished its operation.
             </summary>
            </member>
        <member name="M:UITweener.OnDisable">
             <summary>
             Mark as not started when finished to enable delay on next play.
             </summary>
            </member>
        <member name="M:UITweener.Sample(System.Single,System.Boolean)">
             <summary>
             Sample the tween at the specified factor.
             </summary>
            </member>
        <member name="M:UITweener.BounceLogic(System.Single)">
             <summary>
             Main Bounce logic to simplify the Sample function
             </summary>
            </member>
        <member name="M:UITweener.Play">
             <summary>
             Play the tween.
             </summary>
            </member>
        <member name="M:UITweener.PlayForward">
             <summary>
             Play the tween forward.
             </summary>
            </member>
        <member name="M:UITweener.PlayReverse">
             <summary>
             Play the tween in reverse.
             </summary>
            </member>
        <member name="M:UITweener.Play(System.Boolean)">
             <summary>
             Manually activate the tweening process, reversing it if necessary.
             </summary>
            </member>
        <member name="M:UITweener.ResetToBeginning">
             <summary>
             Manually reset the tweener's state to the beginning.
             If the tween is playing forward, this means the tween's start.
             If the tween is playing in reverse, this means the tween's end.
             </summary>
            </member>
        <member name="M:UITweener.Toggle">
             <summary>
             Manually start the tweening process, reversing its direction.
             </summary>
            </member>
        <member name="M:UITweener.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Actual tweening logic should go here.
             </summary>
            </member>
        <member name="M:UITweener.Begin``1(UnityEngine.GameObject,System.Single,System.Single)">
             <summary>
             Starts the tweening operation.
             </summary>
            </member>
        <member name="M:UITweener.SetStartToCurrentValue">
             <summary>
             Set the 'from' value to the current one.
             </summary>
            </member>
        <member name="M:UITweener.SetEndToCurrentValue">
             <summary>
             Set the 'to' value to the current one.
             </summary>
            </member>
        <member name="T:TweenAlpha">
             <summary>
             Tween the object's position, rotation and scale.
             </summary>
            </member>
        <member name="P:TweenAlpha.value">
             <summary>
             Tween's current value.
             </summary>
            </member>
        <member name="M:TweenAlpha.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Tween the value.
             </summary>
            </member>
        <member name="M:TweenAlpha.Begin(UnityEngine.GameObject,System.Single,System.Single,System.Single)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="P:TweenColor.value">
             <summary>
             Tween's current value.
             </summary>
            </member>
        <member name="M:TweenColor.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Tween the value.
             </summary>
            </member>
        <member name="M:TweenColor.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Color)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:TweenDepth">
             <summary>
             Tween the UGUI width and hegith
             </summary>
            </member>
        <member name="M:TweenDepth.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Interpolate the position, scale, and rotation.
             </summary>
            </member>
        <member name="M:TweenDepth.Begin(UnityEngine.GameObject,System.Single,System.Single)">
             <summary>
             Start the tweening operation from the current position/rotation/scale to the target transform.
             </summary>
            </member>
        <member name="M:TweenDepth.Begin(UnityEngine.GameObject,System.Single,System.Single,System.Single)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:TweenFOV">
             <summary>
             Tween the camera's field of view.
             </summary>
            </member>
        <member name="P:TweenFOV.value">
             <summary>
             Tween's current value.
             </summary>
            </member>
        <member name="M:TweenFOV.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Tween the value.
             </summary>
            </member>
        <member name="M:TweenFOV.Begin(UnityEngine.GameObject,System.Single,System.Single)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:TweenOrthoSize">
             <summary>
             Tween the camera's orthographic size.
             </summary>
            </member>
        <member name="P:TweenOrthoSize.cachedCamera">
             <summary>
             Camera that's being tweened.
             </summary>
            </member>
        <member name="P:TweenOrthoSize.value">
             <summary>
             Tween's current value.
             </summary>
            </member>
        <member name="M:TweenOrthoSize.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Tween the value.
             </summary>
            </member>
        <member name="M:TweenOrthoSize.Begin(UnityEngine.GameObject,System.Single,System.Single)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:TweenPosition">
             <summary>
             Tween the object's position, rotation and scale.
             </summary>
            </member>
        <member name="M:TweenPosition.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Interpolate the position, scale, and rotation.
             </summary>
            </member>
        <member name="M:TweenPosition.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Vector3)">
             <summary>
             Start the tweening operation from the current position/rotation/scale to the target transform.
             </summary>
            </member>
        <member name="M:TweenPosition.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:TweenRotation">
             <summary>
             Tween the object's position, rotation and scale.
             </summary>
            </member>
        <member name="P:TweenRotation.value">
             <summary>
             Tween's current value.
             </summary>
            </member>
        <member name="M:TweenRotation.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Tween the value.
             </summary>
             <summary>
             Interpolate the position, scale, and rotation.
             </summary>
            </member>
        <member name="M:TweenRotation.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Quaternion)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:TweenScaler">
             <summary>
             Tween the object's local scale.
             </summary>
            </member>
        <member name="M:TweenScaler.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Tween the value.
             </summary>
            </member>
        <member name="M:TweenScaler.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Vector3)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:TweenTransform">
             <summary>
             Tween the object's position, rotation and scale.
             </summary>
            </member>
        <member name="M:TweenTransform.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Interpolate the position, scale, and rotation.
             </summary>
            </member>
        <member name="M:TweenTransform.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Transform)">
             <summary>
             Start the tweening operation from the current position/rotation/scale to the target transform.
             </summary>
            </member>
        <member name="M:TweenTransform.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Transform,UnityEngine.Transform)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:TweenUGUIHW">
             <summary>
             Tween the UGUI width and hegith
             </summary>
            </member>
        <member name="M:TweenUGUIHW.OnUpdate(System.Single,System.Boolean)">
             <summary>
             Interpolate the position, scale, and rotation.
             </summary>
            </member>
        <member name="M:TweenUGUIHW.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Vector2)">
             <summary>
             Start the tweening operation from the current position/rotation/scale to the target transform.
             </summary>
            </member>
        <member name="M:TweenUGUIHW.Begin(UnityEngine.GameObject,System.Single,UnityEngine.Vector2,UnityEngine.Vector2)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:TweenVolume">
             <summary>
             Tween the audio source's volume.
             </summary>
            </member>
        <member name="P:TweenVolume.audioSource">
             <summary>
             Cached version of 'audio', as it's always faster to cache.
             </summary>
            </member>
        <member name="P:TweenVolume.value">
             <summary>
             Audio source's current volume.
             </summary>
            </member>
        <member name="M:TweenVolume.Begin(UnityEngine.GameObject,System.Single,System.Single)">
             <summary>
             Start the tweening operation.
             </summary>
            </member>
        <member name="T:HutongGames.PlayMaker.ActionHelpers">
             <summary>
             Helper functions to make authoring Actions simpler.
             </summary>
            </member>
        <member name="P:HutongGames.PlayMaker.ActionHelpers.WhiteTexture">
             <summary>
             Get a small white texture
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.BlendColor(HutongGames.PlayMaker.ColorBlendMode,UnityEngine.Color,UnityEngine.Color)">
             <summary>
             Common blend operations for colors
             E.g. used by TweenColor action
             </summary>
             <returns></returns>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.IsVisible(UnityEngine.GameObject)">
             <summary>
             Check the visibility of the Renderer on a GameObject
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.GetOwnerDefault(HutongGames.PlayMaker.FsmStateAction,HutongGames.PlayMaker.FsmOwnerDefault)">
             <summary>
             Get the GameObject targeted by an action's FsmOwnerDefault variable
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.GetGameObjectFsm(UnityEngine.GameObject,System.String)">
             <summary>
             Get the first Playmaker FSM on a game object.
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.GetRandomWeightedIndex(HutongGames.PlayMaker.FsmFloat[])">
             <summary>
             Given an array of weights, returns a randomly selected index. 
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AddAnimationClip(UnityEngine.GameObject,UnityEngine.AnimationClip)">
             <summary>
             Add an animation clip to a GameObject if it has an Animation component
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.HasAnimationFinished(UnityEngine.AnimationState,System.Single,System.Single)">
             <summary>
             Check if an animation has finished playing.
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.GetTargetRotation(HutongGames.PlayMaker.RotationOptions,UnityEngine.Transform,UnityEngine.Transform,UnityEngine.Vector3)">
             <summary>
             Returns a target rotation in world space given the specified parameters
             Some parameters are interpreted differently based on RotationOptions selected.
             E.g. used by TweenRotation
             </summary>
             <param name="option">Rotation options exposed to user</param>
             <param name="owner">The transform being rotated</param>
             <param name="target">A potential target transform</param>
             <param name="rotation">A potential target rotation</param>
             <returns></returns>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.CheckForValidEvent(HutongGames.PlayMaker.FsmState,System.String)">
             <summary>
             Check if a state responds to an event.
             Not really needed since the ErrorChecker covers this.
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoName(HutongGames.PlayMaker.FsmStateAction,HutongGames.PlayMaker.INamedVariable[])">
             <summary>
             ActionName : field1 field2 ...
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoName(System.String,HutongGames.PlayMaker.INamedVariable[])">
             <summary>
             ActionName : field1 field2 ...
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoNameRange(HutongGames.PlayMaker.FsmStateAction,HutongGames.PlayMaker.NamedVariable,HutongGames.PlayMaker.NamedVariable)">
             <summary>
             ActionName : min - max
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoNameRange(System.String,HutongGames.PlayMaker.NamedVariable,HutongGames.PlayMaker.NamedVariable)">
             <summary>
             ActionName : min - max
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoNameSetVar(HutongGames.PlayMaker.FsmStateAction,HutongGames.PlayMaker.NamedVariable,HutongGames.PlayMaker.NamedVariable)">
             <summary>
             ActionName : var = value
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoNameSetVar(System.String,HutongGames.PlayMaker.NamedVariable,HutongGames.PlayMaker.NamedVariable)">
             <summary>
             ActionName : var = value
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoNameConvert(HutongGames.PlayMaker.FsmStateAction,HutongGames.PlayMaker.NamedVariable,HutongGames.PlayMaker.NamedVariable)">
             <summary>
             [-Convert]ActionName : fromVar to toVar
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoNameConvert(System.String,HutongGames.PlayMaker.NamedVariable,HutongGames.PlayMaker.NamedVariable)">
             <summary>
             [-Convert]ActionName : fromVar to toVar
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoNameGetProperty(HutongGames.PlayMaker.FsmStateAction,HutongGames.PlayMaker.NamedVariable,HutongGames.PlayMaker.NamedVariable)">
             <summary>
             ActionName : property -&gt; store
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.AutoNameGetProperty(System.String,HutongGames.PlayMaker.NamedVariable,HutongGames.PlayMaker.NamedVariable)">
             <summary>
             ActionName : property -&gt; store
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.GetControlPreviewRect(System.Single)">
             <summary>
             Gets a rect that fits in the controls column of an inspector.
             </summary>
             <param name="height">Desired height.</param>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.PositionHandle(UnityEngine.Object,UnityEngine.GameObject,UnityEngine.Vector3)">
             <summary>
             Draws a Position Handle in the scene using a combination of GameObject and Position values.
             If a GameObject is specified, the Position is a local offset.
             If no GameObject is specified, the Position is a world position.
             Many actions use this setup. 
             </summary>
             <param name="owner"></param>
             <param name="go"></param>
             <param name="position"></param>
             <returns></returns>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.DrawArrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws an arrow in the scene.
             Useful for actions that set a direction.
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.GetPreviewMesh(UnityEngine.GameObject)">
             <summary>
             Get a mesh that can be used by Gizmos.DrawMesh to preview the mesh while editing.
             E.g. to preview a GameObject moving to a target
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.SingleColorScaleHandle(UnityEngine.GameObject,UnityEngine.Vector3,System.Single,UnityEngine.Color)">
             <summary>
             Single color version of Handles.ScaleHandle.
             Useful when you have multiple editors (e.g. TweenScale)
             Note, does not handle value of 0 very well (fix?)
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.GetLocalBounds(UnityEngine.GameObject)">
             <summary>
             Get a local bounding box for a GameObject
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.DrawWireBounds(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Color)">
             <summary>
             Draw wire bounding box for Transform.
             Optionally scale bounding box.
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.DrawWireBounds(UnityEngine.Transform,UnityEngine.Quaternion,UnityEngine.Color)">
             <summary>
             Draw wireframe bounding box around object with optional rotation (for editing gizmos)
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.DrawWireBounds(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color)">
             <summary>
             Draw wireframe bounding box around object with optional translate, rotate, and scale (for editing gizmos)
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.DrawWireCube(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color)">
             <summary>
             Similar to Gizmos.DrawWireCube but can be used in editor code.
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.ActionHelpers.RuntimeError(HutongGames.PlayMaker.FsmStateAction,System.String)">
             <summary>
             Actions should use this for consistent error messages.
             Error will contain action name and full FSM path.
             </summary>
            </member>
        <member name="T:HutongGames.PlayMaker.Actions.AnimateFsmAction">
             <summary>
             Base action for AnimateXXX actions
             </summary>
            </member>
        <member name="F:HutongGames.PlayMaker.Actions.FsmStateActionAnimatorBase.IklayerIndex">
             <summary>
             The layerIndex index passed when processing action during OnAnimatorIK
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.FsmStateActionAnimatorBase.OnActionUpdate">
             <summary>
             Raises the action update event. Could be fired during onUpdate or OnAnimatorMove based on the action setup.
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.ArrayForEach.Awake">
             <summary>
             Initialize FSM on awake so it doesn't cause hitches later
             </summary>
            </member>
        <member name="F:HutongGames.PlayMaker.Actions.ComponentAction`1.cachedGameObject">
             <summary>
             The cached GameObject. Call UpdateCache() first
             </summary>
            </member>
        <member name="F:HutongGames.PlayMaker.Actions.ComponentAction`1.cachedComponent">
             <summary>
             The cached component. Call UpdateCache() first
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.Assert.PlayMaker#ConditionalExpression#IEvaluatorContext#GetVariable(System.String)">
             <inheritdoc />
            </member>
        <member name="M:HutongGames.EaseEditor.DrawPreviewCurve(HutongGames.EasingFunction.Ease,System.Boolean@,System.Single@,UnityEngine.Color)">
             <summary>
             Draws scrubbing controls and a preview curve for EasingFunctions
             </summary>
             <param name="ease">The  Ease function to preview</param>
             <param name="playPreview">Did the user hit Play in the scrubbing slider</param>
             <param name="currentTime">Used to draw the current time on the preview</param>
             <param name="currentTimeColor">Color used to draw current time</param>
            </member>
        <member name="M:HutongGames.EasingFunction.GetEasingFunction(HutongGames.EasingFunction.Ease)">
             <summary>
             Returns the function associated to the easingFunction enum. This value returned should be cached as it allocates memory
             to return.
             </summary>
             <param name="easingFunction">The enum associated with the easing function.</param>
             <returns>The easing function</returns>
            </member>
        <member name="M:HutongGames.EasingFunction.GetEasingFunctionDerivative(HutongGames.EasingFunction.Ease)">
             <summary>
             Gets the derivative function of the appropriate easing function. If you use an easing function for position then this
             function can get you the speed at a given time (normalized).
             </summary>
             <param name="easingFunction"></param>
             <returns>The derivative function</returns>
            </member>
        <member name="T:HutongGames.PlayMaker.Actions.MouseLook">
             <summary>
             Action version of Unity's builtin MouseLook behaviour.
             TODO: Expose invert Y option.
             </summary>
            </member>
        <member name="T:HutongGames.PlayMaker.Actions.MouseLook2">
             <summary>
             Action version of Unity's builtin MouseLook behaviour.
             TODO: Expose invert Y option.
             </summary>
            </member>
        <member name="T:HutongGames.PlayMaker.Actions.BaseFsmVariableAction">
             <summary>
             Base class for Get/Set FSM Variable actions
             </summary>
            </member>
        <member name="T:HutongGames.PlayMaker.Actions.BaseFsmVariableIndexAction">
             <summary>
             Base class for Get/Set FSM Variable actions
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.ForwardAllEvents.Event(HutongGames.PlayMaker.FsmEvent)">
             <summary>
             Return true to eat the event
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.ForwardEvent.Event(HutongGames.PlayMaker.FsmEvent)">
             <summary>
             Return true to eat the event
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.RunFSM.Awake">
             <summary>
             Initialize FSM on awake so it doesn't cause hitches later
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.RunFSM.OnEnter">
             <summary>
             Start the FSM on entering the state
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.RunFSMAction.Event(HutongGames.PlayMaker.FsmEvent)">
             <summary>
             Forward global events to the sub FSM
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.RunFSMAction.OnEnter">
             <summary>
             Start the FSM on entering the state
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.RunFSMAction.OnExit">
             <summary>
             Stop the FSM on exiting the state
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.UiButtonArray.OnPreprocess">
             <summary>
             Try to do all GetComponent calls in Preprocess as part of build
             But sometimes the values are not known at build time...
             </summary>
            </member>
        <member name="T:HutongGames.PlayMaker.UpdateHelper">
             <summary>
             Playmaker runtime code can't call unity editor code
             This class is a workaround, allowing runtime code to call EditorUtility.SetDirty
             </summary>
            </member>
        <member name="M:HutongGames.PlayMaker.UpdateHelper.SetDirty(HutongGames.PlayMaker.Fsm)">
             <summary>
             Helper that can be called by reflection from runtime class without referencing UnityEditor
             E.g. When Fsm is loaded it can need fixing and then needs to be marked dirty
             </summary>
            </member>
        <member name="P:DuloGames.UI.ColorScheme.imageLight">
             <summary>
             Gets or sets the light shade image color.
             </summary>
            </member>
        <member name="P:DuloGames.UI.ColorScheme.imageLightest">
             <summary>
             Gets or sets the lightest shade image color.
             </summary>
            </member>
        <member name="P:DuloGames.UI.ColorScheme.imageDark">
             <summary>
             Gets or sets the dark shade image color.
             </summary>
            </member>
        <member name="P:DuloGames.UI.ColorScheme.imageDarkest">
             <summary>
             Gets or sets the darkest shade image color.
             </summary>
            </member>
        <member name="P:DuloGames.UI.ColorScheme.imageTribal">
             <summary>
             Gets or sets the tribal image color.
             </summary>
            </member>
        <member name="P:DuloGames.UI.ColorScheme.button">
             <summary>
             Gets or sets the button color.
             </summary>
            </member>
        <member name="P:DuloGames.UI.ColorScheme.windowHeader">
             <summary>
             Gets or sets the window header color.
             </summary>
            </member>
        <member name="P:DuloGames.UI.ColorScheme.linkColors">
             <summary>
             Gets or sets the link color block.
             </summary>
            </member>
        <member name="M:DuloGames.UI.ColorScheme.ApplyColorScheme">
             <summary>
             Applies the color scheme.
             </summary>
            </member>
        <member name="M:DuloGames.UI.ColorScheme.ApplyToElement(DuloGames.UI.ColorSchemeElement)">
             <summary>
             Applies the color scheme to the specified element.
             </summary>
             <param name="element"></param>
            </member>
        <member name="P:DuloGames.UI.ColorSchemeManager.activeColorScheme">
             <summary>
             Gets or sets the active color scheme.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectMgr.AddCharacter(DuloGames.UI.Demo_CharacterInfo,UnityEngine.GameObject,System.Int32)">
             <summary>
             Adds a character to the slot at the specified index.
             </summary>
             <param name="info">The character info.</param>
             <param name="modelPrefab">The character model prefab.</param>
             <param name="index">Slot index.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectMgr.SelectFirstAvailable">
             <summary>
             Selects the first available character if any.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectMgr.SelectCharacter(System.Int32)">
             <summary>
             Selects the character slot at the given index.
             </summary>
             <param name="index"></param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectMgr.SelectCharacter(DuloGames.UI.Demo_CharacterSelectSlot)">
             <summary>
             Selects the character slot.
             </summary>
             <param name="slot">The character slot component.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectMgr.GetCharacterInDirection(System.Single)">
             <summary>
             Gets the character in the specified direction (1 or -1).
             </summary>
             <param name="direction">The direction 1 or -1.</param>
             <returns>The character slot.</returns>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectMgr.SelectNext">
             <summary>
             Selects the next character slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectMgr.SelectPrevious">
             <summary>
             Selects the previous character slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectMgr.RemoveCharacter(System.Int32)">
             <summary>
             Remove the character at the given index.
             </summary>
             <param name="index">The index.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectMgr.DeleteSelected">
             <summary>
             Deletes the selected character.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList.AddCharacter(DuloGames.UI.Demo_CharacterInfo,System.Boolean)">
             <summary>
             Adds a character to the character list.
             </summary>
             <param name="info">The character info.</param>
             <param name="selected">In the character should be selected.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList.OnCharacterSelected(DuloGames.UI.Demo_CharacterSelectList_Character)">
             <summary>
             Event invoked when when a character in the list is selected.
             </summary>
             <param name="character">The character.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList.OnCharacterDeleteRequested(DuloGames.UI.Demo_CharacterSelectList_Character)">
             <summary>
             Event invoked when when a character delete button is pressed.
             </summary>
             <param name="character">The character.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList.OnCharacterDeleteConfirm">
             <summary>
             Event invoked when a character deletion is confirmed.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList.OnCharacterDeleteCancel">
             <summary>
             Event invoked when a character deletion is canceled.
             </summary>
            </member>
        <member name="P:DuloGames.UI.Demo_CharacterSelectList_Character.characterInfo">
             <summary>
             Gets the character info.
             </summary>
            </member>
        <member name="P:DuloGames.UI.Demo_CharacterSelectList_Character.isSelected">
             <summary>
             Gets a value indicating wheather this character is selected.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList_Character.SetCharacterInfo(DuloGames.UI.Demo_CharacterInfo)">
             <summary>
             Sets the character info.
             </summary>
             <param name="info">The character info.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList_Character.SetAvatar(UnityEngine.Sprite)">
             <summary>
             Sets the avatar sprite.
             </summary>
             <param name="sprite">The avatar sprite.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList_Character.SetToggleGroup(UnityEngine.UI.ToggleGroup)">
             <summary>
             Sets the toggle group.
             </summary>
             <param name="group">The toggle group.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList_Character.SetSelected(System.Boolean)">
             <summary>
             Sets the selected state.
             </summary>
             <param name="selected">The selected state.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList_Character.AddOnSelectListener(UnityEngine.Events.UnityAction{DuloGames.UI.Demo_CharacterSelectList_Character})">
             <summary>
             Adds on select listener.
             </summary>
             <param name="call">The on select listener.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList_Character.RemoveOnSelectListener(UnityEngine.Events.UnityAction{DuloGames.UI.Demo_CharacterSelectList_Character})">
             <summary>
             Removes on select listener.
             </summary>
             <param name="call">The on select listener.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList_Character.AddOnDeleteListener(UnityEngine.Events.UnityAction{DuloGames.UI.Demo_CharacterSelectList_Character})">
             <summary>
             Adds on delete listener.
             </summary>
             <param name="call">The delete listener.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_CharacterSelectList_Character.RemoveOnDeleteListener(UnityEngine.Events.UnityAction{DuloGames.UI.Demo_CharacterSelectList_Character})">
             <summary>
             Removes on delete listener.
             </summary>
             <param name="call">The delete listener.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.OnSubmitClick">
             <summary>
             Fired when the submit button is clicked.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.OnScrollUpClick">
             <summary>
             Fired when the scroll up button is pressed.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.OnScrollDownClick">
             <summary>
             Fired when the scroll down button is pressed.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.OnScrollToTopClick">
             <summary>
             Fired when the scroll to top button is pressed.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.OnScrollToBottomClick">
             <summary>
             Fired when the scroll to bottom button is pressed.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.OnInputEndEdit(System.String)">
             <summary>
             Fired when the input field is submitted.
             </summary>
             <param name="text"></param>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.OnTabStateChange(System.Boolean)">
             <summary>
             Fired when a tab button is toggled.
             </summary>
             <param name="state"></param>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.FindActiveTab">
             <summary>
             Finds the active tab based on the tab buttons toggle state.
             </summary>
             <returns>The active tab info.</returns>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.GetTabInfo(System.Int32)">
             <summary>
             Gets the tab info for the specified tab by id.
             </summary>
             <param name="tabId">Tab id.</param>
             <returns></returns>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.SendChatMessage(System.String)">
             <summary>
             Sends a chat message.
             </summary>
             <param name="text">The message.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_Chat.ReceiveChatMessage(System.Int32,System.String)">
             <summary>
             Adds a chat message to the specified tab.
             </summary>
             <param name="tabId">The tab id.</param>
             <param name="text">The message.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_XPTooltip.OnTooltip(System.Boolean)">
             <summary>
             Raises the tooltip event.
             </summary>
             <param name="show">If set to <c>true</c> show.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_XPTooltip.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer enter event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_XPTooltip.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer exit event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.Demo_XPTooltip.InternalShowTooltip">
             <summary>
             Internal call for show tooltip.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Demo_XPTooltip.InternalHideTooltip">
             <summary>
             Internal call for hide tooltip.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Test_CompassTester.StartTween(System.Single,System.Single,System.Boolean)">
             <summary>
             Tweens the transform rotation.
             </summary>
             <param name="targetRotation">Target rotation.</param>
             <param name="duration">Duration.</param>
             <param name="ignoreTimeScale">If set to <c>true</c> ignore time scale.</param>
            </member>
        <member name="M:DuloGames.UI.Test_CompassTester.SetRotation(System.Single)">
             <summary>
             Sets the transform rotation.
             </summary>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:DuloGames.UI.Test_CompassTester.OnTweenFinished">
             <summary>
             Raises the list tween finished event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Test_FadeInOut.StartAlphaTween(System.Single,System.Single,System.Boolean)">
             <summary>
             Tweens the canvas group alpha.
             </summary>
             <param name="targetAlpha">Target alpha.</param>
             <param name="duration">Duration.</param>
             <param name="ignoreTimeScale">If set to <c>true</c> ignore time scale.</param>
            </member>
        <member name="M:DuloGames.UI.Test_FadeInOut.SetAlpha(System.Single)">
             <summary>
             Sets the list alpha.
             </summary>
             <param name="alpha">Alpha.</param>
            </member>
        <member name="M:DuloGames.UI.Test_FadeInOut.OnTweenFinished">
             <summary>
             Raises the list tween finished event.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIAudioSource.volume">
             <summary>
             Gets or sets the volume level.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIPlayAudio.audioClip">
             <summary>
             Gets or sets the audio clip.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIPlayAudio.volume">
             <summary>
             Gets or sets the volume level.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIPlayAudio.playOnEvent">
             <summary>
             Gets or sets the event on which the audio clip should be played.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIBulletBar.fillAmount">
             <summary>
             Gets or sets the fill amount (0 to 1).
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIBulletBar.invertFill">
             <summary>
             Gets or sets value indicating whether the fill should be inverted.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIBulletBar.rectTransform">
             <summary>
             Gets the rect transform.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIBulletBar.UpdateFill">
             <summary>
             Updates the fill.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIBulletBar.ConstructBullets">
             <summary>
             Constructs the bullet game objects and components.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UICastBar.IsCasting">
             <summary>
             Gets a value indicating whether this cast bar is casting.
             </summary>
             <value><c>true</c> if this instance is casting; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UICastBar.canvasGroup">
             <summary>
             Gets the canvas group.
             </summary>
             <value>The canvas group.</value>
            </member>
        <member name="M:DuloGames.UI.UICastBar.ApplyColorStage(DuloGames.UI.UICastBar.ColorStage)">
             <summary>
             Applies the color stages.
             </summary>
             <param name="stage">Stage.</param>
            </member>
        <member name="M:DuloGames.UI.UICastBar.Show">
             <summary>
             Show this cast bar.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UICastBar.Show(System.Boolean)">
             <summary>
             Show this cast bar.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UICastBar.Hide">
             <summary>
             Hide this cast bar.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UICastBar.Hide(System.Boolean)">
             <summary>
             Hide this cast bar.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UICastBar.StartAlphaTween(System.Single,System.Single,System.Boolean)">
             <summary>
             Starts alpha tween.
             </summary>
             <param name="targetAlpha">Target alpha.</param>
             <param name="duration">Duration.</param>
             <param name="ignoreTimeScale">If set to <c>true</c> ignore time scale.</param>
            </member>
        <member name="M:DuloGames.UI.UICastBar.SetCanvasAlpha(System.Single)">
             <summary>
             Sets the canvas alpha.
             </summary>
             <param name="alpha">Alpha.</param>
            </member>
        <member name="M:DuloGames.UI.UICastBar.OnHideTweenFinished">
             <summary>
             Raises the hide tween finished event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UICastBar.SetFillAmount(System.Single)">
             <summary>
             Sets the fill amount.
             </summary>
             <param name="amount">Amount.</param>
            </member>
        <member name="M:DuloGames.UI.UICastBar.StartCasting(DuloGames.UI.UISpellInfo,System.Single,System.Single)">
             <summary>
             Starts the casting of the specified spell.
             </summary>
             <param name="spellInfo">Spell info.</param>
             <param name="duration">Duration.</param>
             <param name="endTime">End time.</param>
            </member>
        <member name="M:DuloGames.UI.UICastBar.Interrupt">
             <summary>
             Interrupts the current cast if any.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIProgressBar.type">
             <summary>
             Gets or sets the type.
             </summary>
             <value>The type.</value>
            </member>
        <member name="P:DuloGames.UI.UIProgressBar.targetImage">
             <summary>
             Gets or sets the target image.
             </summary>
             <value>The target image.</value>
            </member>
        <member name="P:DuloGames.UI.UIProgressBar.sprites">
             <summary>
             Gets or sets array with the animation sprites.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIProgressBar.targetTransform">
             <summary>
             Gets or sets the target transform.
             </summary>
             <value>The target transform.</value>
            </member>
        <member name="P:DuloGames.UI.UIProgressBar.minWidth">
             <summary>
             Gets or sets the minimum width (Used for the resize type bar).
             </summary>
             <value>The minimum width.</value>
            </member>
        <member name="P:DuloGames.UI.UIProgressBar.maxWidth">
             <summary>
             Gets or sets the maximum width (Used for the resize type bar).
             </summary>
             <value>The maximum width.</value>
            </member>
        <member name="P:DuloGames.UI.UIProgressBar.fillAmount">
             <summary>
             Gets or sets the fill amount.
             </summary>
             <value>The fill amount.</value>
            </member>
        <member name="P:DuloGames.UI.UIProgressBar.steps">
             <summary>
             Gets or sets the steps (Zero for no stepping).
             </summary>
             <value>The steps.</value>
            </member>
        <member name="P:DuloGames.UI.UIProgressBar.currentStep">
             <summary>
             Gets or sets the current step.
             </summary>
             <value>The current step.</value>
            </member>
        <member name="M:DuloGames.UI.UIProgressBar.UpdateBarFill">
             <summary>
             Updates the bar fill.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIProgressBar.AddFill">
             <summary>
             Adds to the fill (Used for buttons).
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIProgressBar.RemoveFill">
             <summary>
             Removes from the fill (Used for buttons).
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIStepBar.step">
             <summary>
             Gets or sets the current step.
             </summary>
             <value>The value.</value>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.IsActive">
             <summary>
             Determines whether this instance is active.
             </summary>
             <returns><c>true</c> if this instance is active; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.RebuildSteps_Editor">
             <summary>
             Editor only!
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.OnValidate">
             <summary>
             Raises the validate event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.GetOverrideFillList">
             <summary>
             Gets the fill override values list.
             </summary>
             <returns>The override fill list.</returns>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.SetOverrideFillList(System.Collections.Generic.List{DuloGames.UI.UIStepBar.StepFillInfo})">
             <summary>
             Sets the fill override values list.
             </summary>
             <param name="list">List.</param>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.ValidateOverrideFillList">
             <summary>
             Validates the fill override values list.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.OnRectTransformDimensionsChange">
             <summary>
             Raises the rect transform dimensions change event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.GoToStep(System.Int32)">
             <summary>
             Goes to the specified step.
             </summary>
             <param name="step">Step.</param>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.UpdateFillImage">
             <summary>
             Updates the fill image.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.UpdateBubble">
             <summary>
             Updates the bubble.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.GetStepFillAmount(System.Int32)">
             <summary>
             Gets the step fill amount.
             </summary>
             <returns>The step fill amount.</returns>
             <param name="step">Step.</param>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.CreateStepsGrid">
             <summary>
             Creates the steps grid.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.UpdateGridProperties">
             <summary>
             Updates the grid properties.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.RebuildSteps">
             <summary>
             Rebuilds the steps.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.UpdateStepsProperties">
             <summary>
             Updates the steps properties.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIStepBar.DestroySteps">
             <summary>
             Destroies the steps.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISelectField.direction">
             <summary>
             The direction in which the list should pop.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISelectField.options">
             <summary>
             New line-delimited list of items.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISelectField.value">
             <summary>
             Currently selected option.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISelectField.selectedOptionIndex">
             <summary>
             Gets the index of the selected option.
             </summary>
             <value>The index of the selected option.</value>
            </member>
        <member name="F:DuloGames.UI.UISelectField.onChange">
             <summary>
             Event delegate triggered when the selected option changes.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISelectField.onTransition">
             <summary>
             Event delegate triggered when the select field transition to a visual state.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField.Open">
             <summary>
             Open the select field list.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField.Close">
             <summary>
             Closes the select field list.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISelectField.IsOpen">
             <summary>
             Gets a value indicating whether the list is open.
             </summary>
             <value><c>true</c> if the list is open; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:DuloGames.UI.UISelectField.GetOptionIndex(System.String)">
             <summary>
             Gets the index of the given option.
             </summary>
             <returns>The option index. (-1 if the option was not found)</returns>
             <param name="optionValue">Option value.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.SelectOptionByIndex(System.Int32)">
             <summary>
             Selects the option by index.
             </summary>
             <param name="optionIndex">Option index.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.SelectOption(System.String)">
             <summary>
             Selects the option by value.
             </summary>
             <param name="optionValue">The option value.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.AddOption(System.String)">
             <summary>
             Adds an option.
             </summary>
             <param name="optionValue">Option value.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.AddOptionAtIndex(System.String,System.Int32)">
             <summary>
             Adds an option at given index.
             </summary>
             <param name="optionValue">Option value.</param>
             <param name="index">Index.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.RemoveOption(System.String)">
             <summary>
             Removes the option.
             </summary>
             <param name="optionValue">Option value.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.RemoveOptionAtIndex(System.Int32)">
             <summary>
             Removes the option at the given index.
             </summary>
             <param name="index">Index.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.ValidateSelectedOption">
             <summary>
             Validates the selected option and makes corrections if it's missing.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField.OnOptionSelect(System.String)">
             <summary>
             Raises the option select event.
             </summary>
             <param name="eventData">Event data.</param>
             <param name="option">Option.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.OnOptionPointerUp(UnityEngine.EventSystems.BaseEventData)">
             <summary>
             Raises the option pointer up event (Used to close the list).
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.TriggerChangeEvent">
             <summary>
             Tiggers the change event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField.OnToggleValueChanged(System.Boolean)">
             <summary>
             Raises the toggle value changed event (used to toggle the list).
             </summary>
             <param name="state">If set to <c>true</c> state.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
             <summary>
             Raises the deselect event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.OnMove(UnityEngine.EventSystems.AxisEventData)">
             <summary>
             Raises the move event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.DoStateTransition(UnityEngine.UI.Selectable.SelectionState,System.Boolean)">
             <summary>
             Dos the state transition of the select field.
             </summary>
             <param name="state">State.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.StartColorTween(UnityEngine.Color,System.Single)">
             <summary>
             Starts the color tween of the select field.
             </summary>
             <param name="color">Color.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.DoSpriteSwap(UnityEngine.Sprite)">
             <summary>
             Does the sprite swap of the select field.
             </summary>
             <param name="newSprite">New sprite.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.TriggerAnimation(System.String)">
             <summary>
             Triggers the animation of the select field.
             </summary>
             <param name="trigger">Trigger.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.ToggleList(System.Boolean)">
             <summary>
             Toggles the list.
             </summary>
             <param name="state">If set to <c>true</c> state.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.CreateList">
             <summary>
             Creates the list and it's options.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField.CreateOption(System.Int32,UnityEngine.UI.ToggleGroup)">
             <summary>
             Creates a option.
             </summary>
             <param name="index">Index.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.CreateSeparator(System.Int32)">
             <summary>
             Creates a separator.
             </summary>
             <param name="index">Index.</param>
             <returns>The separator game object.</returns>
            </member>
        <member name="M:DuloGames.UI.UISelectField.ListCleanup">
             <summary>
             Does a list cleanup (Destroys the list and clears the option objects list).
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField.PositionListForDirection(DuloGames.UI.UISelectField.Direction)">
             <summary>
             Positions the list for the given direction (Auto is not handled in this method).
             </summary>
             <param name="direction">Direction.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.ListDimensionsChanged">
             <summary>
             Event invoked when the list dimensions change.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField.TweenListAlpha(System.Single,System.Single,System.Boolean)">
             <summary>
             Tweens the list alpha.
             </summary>
             <param name="targetAlpha">Target alpha.</param>
             <param name="duration">Duration.</param>
             <param name="ignoreTimeScale">If set to <c>true</c> ignore time scale.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.SetListAlpha(System.Single)">
             <summary>
             Sets the list alpha.
             </summary>
             <param name="alpha">Alpha.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.TriggerListAnimation(System.String)">
             <summary>
             Triggers the list animation.
             </summary>
             <param name="trigger">Trigger.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField.OnListTweenFinished">
             <summary>
             Raises the list tween finished event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField.OnListAnimationFinish(DuloGames.UI.UISelectField_List.State)">
             <summary>
             Raises the list animation finish event.
             </summary>
             <param name="state">State.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_List.SetTriggers(System.String,System.String)">
             <summary>
             Sets the animation triggers (Used to detect animation finish).
             </summary>
             <param name="openTrigger">Open trigger.</param>
             <param name="closeTrigger">Close trigger.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_List.IsPressed">
             <summary>
             Determines whether list is pressed.
             </summary>
             <returns><c>true</c> if the list is pressed by the specified eventData; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UISelectField_List.IsHighlighted(UnityEngine.EventSystems.BaseEventData)">
             <summary>
             Determines whether list is highlighted.
             </summary>
             <returns><c>true</c> if this instance is highlighted the specified eventData; otherwise, <c>false</c>.</returns>
             <param name="eventData">Event data.</param>
            </member>
        <member name="F:DuloGames.UI.UISelectField_Option.selectField">
             <summary>
             The select field referrence.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISelectField_Option.textComponent">
             <summary>
             The text component referrence.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISelectField_Option.onSelectOption">
             <summary>
             The On Select Option event.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISelectField_Option.onPointerUp">
             <summary>
             The On Pointer Up event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.Initialize(DuloGames.UI.UISelectField,UnityEngine.UI.Text)">
             <summary>
             Initialize the option.
             </summary>
             <param name="select">Select.</param>
             <param name="text">Text.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.IsPressed">
             <summary>
             Determines whether this option is pressed.
             </summary>
             <returns><c>true</c> if this instance is pressed the specified eventData; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.IsHighlighted(UnityEngine.EventSystems.BaseEventData)">
             <summary>
             Determines whether this option is highlighted.
             </summary>
             <returns><c>true</c> if this instance is highlighted the specified eventData; otherwise, <c>false</c>.</returns>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer up event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.OnValueChanged(System.Boolean)">
             <summary>
             Raises the value changed event.
             </summary>
             <param name="state">If set to <c>true</c> state.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.DoStateTransition(UnityEngine.UI.Selectable.SelectionState,System.Boolean)">
             <summary>
             Does the state transition.
             </summary>
             <param name="state">State.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.DoTextStateTransition(UnityEngine.UI.Selectable.SelectionState,System.Boolean)">
             <summary>
             Does the text state transition.
             </summary>
             <param name="state">State.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.StartColorTween(UnityEngine.Color,System.Single)">
             <summary>
             Starts the color tween.
             </summary>
             <param name="color">Color.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.DoSpriteSwap(UnityEngine.Sprite)">
             <summary>
             Does the sprite swap.
             </summary>
             <param name="newSprite">New sprite.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Option.TriggerAnimation(System.String)">
             <summary>
             Triggers the animation.
             </summary>
             <param name="trigger">Trigger.</param>
            </member>
        <member name="P:DuloGames.UI.UISelectField_OptionOverlay.transition">
             <summary>
             Gets or sets the transition type.
             </summary>
             <value>The transition.</value>
            </member>
        <member name="P:DuloGames.UI.UISelectField_OptionOverlay.colorBlock">
             <summary>
             Gets or set the color block.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISelectField_OptionOverlay.targetGraphic">
             <summary>
             Gets or sets the target graphic.
             </summary>
             <value>The target graphic.</value>
            </member>
        <member name="M:DuloGames.UI.UISelectField_OptionOverlay.InstantClearState">
             <summary>
             Instantly clears the visual state.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField_OptionOverlay.InternalEvaluateAndTransitionToNormalState(System.Boolean)">
             <summary>
             Internally evaluates and transitions to normal state.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_OptionOverlay.DoStateTransition(DuloGames.UI.UISelectField_OptionOverlay.VisualState,System.Boolean)">
             <summary>
             Does the state transition.
             </summary>
             <param name="state">State.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UISelectField_OptionOverlay.StartColorTween(UnityEngine.Color,System.Boolean)">
             <summary>
             Starts the color tween.
             </summary>
             <param name="targetColor">Target color.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="P:DuloGames.UI.UISelectField_Transition.targetGraphic">
             <summary>
             Gets or sets the target graphic.
             </summary>
             <value>The target graphic.</value>
            </member>
        <member name="P:DuloGames.UI.UISelectField_Transition.targetGameObject">
             <summary>
             Gets or sets the target game object.
             </summary>
             <value>The target game object.</value>
            </member>
        <member name="P:DuloGames.UI.UISelectField_Transition.animator">
             <summary>
             Gets the animator.
             </summary>
             <value>The animator.</value>
            </member>
        <member name="P:DuloGames.UI.UISelectField_Transition.transition">
             <summary>
             Gets or sets the transition type.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISelectField_Transition.colors">
             <summary>
             Gets or sets the color block.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISelectField_Transition.spriteState">
             <summary>
             Gets or sets the sprite state.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISelectField_Transition.animationTriggers">
             <summary>
             Gets or sets the animation triggers.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISelectField_Transition.m_Select">
             <summary>
             The select field.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISelectField_Transition.InstantClearState">
             <summary>
             Instantly clears the visual state.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISliderExtended.options">
             <summary>
             Gets or sets the options list (Rebuilds the options on set).
             </summary>
             <value>The options.</value>
            </member>
        <member name="P:DuloGames.UI.UISliderExtended.selectedOptionGameObject">
             <summary>
             Gets the selected option game object.
             </summary>
             <value>The selected option game object.</value>
            </member>
        <member name="P:DuloGames.UI.UISliderExtended.selectedOptionIndex">
             <summary>
             Gets the index of the selected option.
             </summary>
             <value>The index of the selected option.</value>
            </member>
        <member name="P:DuloGames.UI.UISliderExtended.optionsPadding">
             <summary>
             Gets or sets the options grid padding.
             </summary>
             <value>The options padding.</value>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.HasOptions">
             <summary>
             Determines whether this slider has options.
             </summary>
             <returns><c>true</c> if this instance has options; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.OnEnable">
             <summary>
             Raises the enable event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.OnValidate">
             <summary>
             Raises the validate event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.OnRectTransformDimensionsChange">
             <summary>
             Raises the rect transform dimensions change event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.OnValueChanged(System.Single)">
             <summary>
             Raises the value changed event.
             </summary>
             <param name="value">Value.</param>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.StartColorTween(UnityEngine.UI.Graphic,UnityEngine.Color,System.Single)">
             <summary>
             Starts a color tween.
             </summary>
             <param name="target">Target.</param>
             <param name="targetColor">Target color.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.ValidateOptions">
             <summary>
             Validates the options.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.UpdateGridProperties">
             <summary>
             Updates the grid properties.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.UpdateOptionsProperties">
             <summary>
             Updates the options properties.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.RebuildOptions">
             <summary>
             Rebuilds the options.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.AddTextEffect(UnityEngine.GameObject)">
             <summary>
             Adds the option text effect.
             </summary>
             <param name="gObject">G object.</param>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.UpdateTextEffect(UnityEngine.GameObject)">
             <summary>
             Updates the option text effect.
             </summary>
             <param name="gObject">G object.</param>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.RebuildTextEffects">
             <summary>
             Rebuilds the options text effects.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.DestroyOptions">
             <summary>
             Destroies the current options.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISliderExtended.CreateOptionsContainer">
             <summary>
             Creates the options container.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISwitchSelect.m_Options">
             <summary>
             New line-delimited list of items.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISwitchSelect.options">
             <summary>
             The list of options.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISwitchSelect.value">
             <summary>
             Currently selected option.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISwitchSelect.selectedOptionIndex">
             <summary>
             Gets the index of the selected option.
             </summary>
             <value>The index of the selected option.</value>
            </member>
        <member name="F:DuloGames.UI.UISwitchSelect.onChange">
             <summary>
             Event delegates triggered when the selected option changes.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISwitchSelect.GetOptionIndex(System.String)">
             <summary>
             Gets the index of the given option.
             </summary>
             <returns>The option index. (-1 if the option was not found)</returns>
             <param name="optionValue">Option value.</param>
            </member>
        <member name="M:DuloGames.UI.UISwitchSelect.SelectOptionByIndex(System.Int32)">
             <summary>
             Selects the option by index.
             </summary>
             <param name="optionIndex">Option index.</param>
            </member>
        <member name="M:DuloGames.UI.UISwitchSelect.SelectOption(System.String)">
             <summary>
             Selects the option by value.
             </summary>
             <param name="optionValue">The option value.</param>
            </member>
        <member name="M:DuloGames.UI.UISwitchSelect.AddOption(System.String)">
             <summary>
             Adds an option.
             </summary>
             <param name="optionValue">Option value.</param>
            </member>
        <member name="M:DuloGames.UI.UISwitchSelect.AddOptionAtIndex(System.String,System.Int32)">
             <summary>
             Adds an option at given index.
             </summary>
             <param name="optionValue">Option value.</param>
             <param name="index">Index.</param>
            </member>
        <member name="M:DuloGames.UI.UISwitchSelect.RemoveOption(System.String)">
             <summary>
             Removes the option.
             </summary>
             <param name="optionValue">Option value.</param>
            </member>
        <member name="M:DuloGames.UI.UISwitchSelect.RemoveOptionAtIndex(System.Int32)">
             <summary>
             Removes the option at the given index.
             </summary>
             <param name="index">Index.</param>
            </member>
        <member name="M:DuloGames.UI.UISwitchSelect.ValidateSelectedOption">
             <summary>
             Validates the selected option and makes corrections if it's missing.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISwitchSelect.TriggerChangeEvent">
             <summary>
             Tiggers the change event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITab.OnToggleStateChanged(System.Boolean)">
             <summary>
             Raises the toggle state changed event.
             </summary>
             <param name="state">If set to <c>true</c> state.</param>
            </member>
        <member name="M:DuloGames.UI.UITab.EvaluateAndToggleContent">
             <summary>
             Evaluates and toggles the content visibility.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITab.InternalEvaluateAndTransitionState(System.Boolean)">
             <summary>
             Internaly evaluates and transitions to the current state.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UITab.DoStateTransition(UnityEngine.UI.Selectable.SelectionState,System.Boolean)">
             <summary>
             Does the state transitioning.
             </summary>
             <param name="state">State.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UITab.StartColorTween(UnityEngine.UI.Graphic,UnityEngine.Color,System.Single)">
             <summary>
             Starts a color tween.
             </summary>
             <param name="target">Target.</param>
             <param name="targetColor">Target color.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:DuloGames.UI.UITab.StartColorTweenText(UnityEngine.Color,System.Single)">
             <summary>
             Starts a color tween.
             </summary>
             <param name="targetColor">Target color.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:DuloGames.UI.UITab.SetTextColor(UnityEngine.Color)">
             <summary>
             Sets the color of the text.
             </summary>
             <param name="color">Color.</param>
            </member>
        <member name="M:DuloGames.UI.UITab.DoSpriteSwap(UnityEngine.UI.Image,UnityEngine.Sprite)">
             <summary>
             Does a sprite swap.
             </summary>
             <param name="target">Target.</param>
             <param name="newSprite">New sprite.</param>
            </member>
        <member name="M:DuloGames.UI.UITab.TriggerAnimation(UnityEngine.GameObject,System.String)">
             <summary>
             Triggers the animation.
             </summary>
             <param name="target">Target.</param>
             <param name="triggername">Triggername.</param>
            </member>
        <member name="M:DuloGames.UI.UITab.Activate">
             <summary>
             Activate the tab.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIItemDatabase.Get(System.Int32)">
             <summary>
             Get the specified ItemInfo by index.
             </summary>
             <param name="index">Index.</param>
            </member>
        <member name="M:DuloGames.UI.UIItemDatabase.GetByID(System.Int32)">
             <summary>
             Gets the specified ItemInfo by ID.
             </summary>
             <returns>The ItemInfo or NULL if not found.</returns>
             <param name="ID">The item ID.</param>
            </member>
        <member name="M:DuloGames.UI.UISpellDatabase.Get(System.Int32)">
             <summary>
             Get the specified SpellInfo by index.
             </summary>
             <param name="index">Index.</param>
            </member>
        <member name="M:DuloGames.UI.UISpellDatabase.GetByID(System.Int32)">
             <summary>
             Gets the specified SpellInfo by ID.
             </summary>
             <returns>The SpellInfo or NULL if not found.</returns>
             <param name="ID">The spell ID.</param>
            </member>
        <member name="M:DuloGames.UI.UITalentDatabase.Get(System.Int32)">
             <summary>
             Get the specified TalentInfo by index.
             </summary>
             <param name="index">Index.</param>
            </member>
        <member name="M:DuloGames.UI.UITalentDatabase.GetByID(System.Int32)">
             <summary>
             Gets the specified TalentInfo by ID.
             </summary>
             <returns>The TalentInfo or NULL if not found.</returns>
             <param name="ID">The talent ID.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipReceiver.GetSlotByType(DuloGames.UI.UIEquipmentType)">
             <summary>
             Gets a slot within it's children by the specified type.
             </summary>
             <returns>The slot by type.</returns>
             <param name="type">Type.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipReceiver.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer enter event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipReceiver.HideHint">
             <summary>
             Hides the hint text if it's visible.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIEquipReceiver.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer exit event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipReceiver.OnDrop(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the drop event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipReceiver.ExtractSlot(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Extracts a base slot based on the event data.
             </summary>
             <returns>The slot.</returns>
             <param name="eventData">Event data.</param>
            </member>
        <member name="P:DuloGames.UI.UIEquipSlot.equipType">
             <summary>
             Gets or sets the equip type of the slot.
             </summary>
             <value>The type of the equip.</value>
            </member>
        <member name="F:DuloGames.UI.UIEquipSlot.m_ItemInfo">
             <summary>
             The assigned item info.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIEquipSlot.onAssign">
             <summary>
             The assign event delegate.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIEquipSlot.onAssignWithSource">
             <summary>
             The assign with source event delegate.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIEquipSlot.onUnassign">
             <summary>
             The unassign event delegate.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.GetItemInfo">
             <summary>
             Gets the item info of the item assigned to this slot.
             </summary>
             <returns>The spell info.</returns>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.IsAssigned">
             <summary>
             Determines whether this slot is assigned.
             </summary>
             <returns><c>true</c> if this instance is assigned; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.Assign(DuloGames.UI.UIItemInfo,UnityEngine.Object)">
             <summary>
             Assign the slot by new item info while refering to the source.
             </summary>
             <param name="itemInfo">The item info.</param>
             <param name="source">The source slot (Could be null).</param>
             <returns><c>true</c> if this instance is assigned; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.Assign(DuloGames.UI.UIItemInfo)">
             <summary>
             Assign the slot by item info.
             </summary>
             <param name="itemInfo">The item info.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.Assign(UnityEngine.Object)">
             <summary>
             Assign the slot by the passed source slot.
             </summary>
             <param name="source">Source.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.CheckEquipType(DuloGames.UI.UIItemInfo)">
             <summary>
             Checks if the given item can assigned to this slot.
             </summary>
             <returns><c>true</c>, if equip type was checked, <c>false</c> otherwise.</returns>
             <param name="info">Info.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.Unassign">
             <summary>
             Unassign this slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.CanSwapWith(UnityEngine.Object)">
             <summary>
             Determines whether this slot can swap with the specified target slot.
             </summary>
             <returns><c>true</c> if this instance can swap with the specified target; otherwise, <c>false</c>.</returns>
             <param name="target">Target.</param>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:DuloGames.UI.UIEquipSlot.PerformSlotSwap(UnityEngine.Object)-->
        <member name="M:DuloGames.UI.UIEquipSlot.OnTooltip(System.Boolean)">
             <summary>
             Raises the tooltip event.
             </summary>
             <param name="show">If set to <c>true</c> show.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.EquipTypeToString(DuloGames.UI.UIEquipmentType)">
             <summary>
             Equip type to string convertion.
             </summary>
             <returns>The string.</returns>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.GetSlots">
             <summary>
             Gets all the equip slots.
             </summary>
             <returns>The slots.</returns>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.GetSlotWithType(DuloGames.UI.UIEquipmentType)">
             <summary>
             Gets the first equip slot found with the specified Equipment Type.
             </summary>
             <returns>The slot.</returns>
             <param name="type">The slot Equipment Type.</param>
            </member>
        <member name="M:DuloGames.UI.UIEquipSlot.GetSlotsWithType(DuloGames.UI.UIEquipmentType)">
             <summary>
             Gets all the equip slots with the specified Equipment Type.
             </summary>
             <returns>The slots.</returns>
             <param name="type">The slot Equipment Type.</param>
            </member>
        <member name="P:DuloGames.UI.UIItemSlot.slotGroup">
             <summary>
             Gets or sets the slot group.
             </summary>
             <value>The slot group.</value>
            </member>
        <member name="P:DuloGames.UI.UIItemSlot.ID">
             <summary>
             Gets or sets the slot ID.
             </summary>
             <value>The I.</value>
            </member>
        <member name="F:DuloGames.UI.UIItemSlot.m_ItemInfo">
             <summary>
             The assigned item info.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIItemSlot.onRightClick">
             <summary>
             The right click event delegate.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIItemSlot.onDoubleClick">
             <summary>
             The double click event delegate.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIItemSlot.onAssign">
             <summary>
             The assign event delegate.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIItemSlot.onAssignWithSource">
             <summary>
             The assign with source event delegate.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIItemSlot.onUnassign">
             <summary>
             The unassign event delegate.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.GetItemInfo">
             <summary>
             Gets the item info of the item assigned to this slot.
             </summary>
             <returns>The spell info.</returns>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.IsAssigned">
             <summary>
             Determines whether this slot is assigned.
             </summary>
             <returns><c>true</c> if this instance is assigned; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.Assign(DuloGames.UI.UIItemInfo,UnityEngine.Object)">
             <summary>
             Assign the slot by new item info while refering to the source.
             </summary>
             <param name="itemInfo">The item info.</param>
             <param name="source">The source slot (Could be null).</param>
             <returns><c>true</c> if this instance is assigned; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.Assign(DuloGames.UI.UIItemInfo)">
             <summary>
             Assign the slot by item info.
             </summary>
             <param name="itemInfo">The item info.</param>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.Assign(UnityEngine.Object)">
             <summary>
             Assign the slot by the passed source slot.
             </summary>
             <param name="source">Source.</param>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.Unassign">
             <summary>
             Unassign this slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.CanSwapWith(UnityEngine.Object)">
             <summary>
             Determines whether this slot can swap with the specified target slot.
             </summary>
             <returns><c>true</c> if this instance can swap with the specified target; otherwise, <c>false</c>.</returns>
             <param name="target">Target.</param>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:DuloGames.UI.UIItemSlot.PerformSlotSwap(UnityEngine.Object)-->
        <member name="M:DuloGames.UI.UIItemSlot.OnTooltip(System.Boolean)">
             <summary>
             Raises the tooltip event.
             </summary>
             <param name="show">If set to <c>true</c> show.</param>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer click event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.GetSlots">
             <summary>
             Gets all the item slots.
             </summary>
             <returns>The slots.</returns>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.GetSlotsWithID(System.Int32)">
             <summary>
             Gets all the item slots with the specified ID.
             </summary>
             <returns>The slots.</returns>
             <param name="ID">The slot ID.</param>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.GetSlotsInGroup(DuloGames.UI.UIItemSlot_Group)">
             <summary>
             Gets all the item slots in the specified group.
             </summary>
             <returns>The slots.</returns>
             <param name="group">The item slot group.</param>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.GetSlot(System.Int32,DuloGames.UI.UIItemSlot_Group)">
             <summary>
             Gets the slot with the specified ID and Group.
             </summary>
             <returns>The slot.</returns>
             <param name="ID">The slot ID.</param>
             <param name="group">The slot Group.</param>
            </member>
        <member name="M:DuloGames.UI.UIItemSlot.PrepareTooltip(DuloGames.UI.UIItemInfo)">
             <summary>
             Prepares the tooltip with the specified item info.
             </summary>
             <param name="itemInfo">Item info.</param>
            </member>
        <member name="F:DuloGames.UI.UISlotBase.m_CurrentDraggedObject">
             <summary>
             The current dragged object.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISlotBase.m_CurrentDraggingPlane">
             <summary>
             The current dragging plane.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISlotBase.iconGraphic">
             <summary>
             The target icon graphic.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISlotBase.dragAndDropEnabled">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:DuloGames.UI.UISlotBase" /> drag and drop is enabled.
             </summary>
             <value><c>true</c> if drag and drop enabled; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UISlotBase.isStatic">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:DuloGames.UI.UISlotBase" /> is static.
             </summary>
             <value><c>true</c> if is static; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UISlotBase.allowThrowAway">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:DuloGames.UI.UISlotBase" /> can be throw away.
             </summary>
             <value><c>true</c> if allow throw away; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UISlotBase.dragKeyModifier">
             <summary>
             Gets or sets the drag key modifier.
             </summary>
             <value>The drag key modifier.</value>
            </member>
        <member name="P:DuloGames.UI.UISlotBase.tooltipEnabled">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UISlotBase" /> tooltip should be enabled.
             </summary>
             <value><c>true</c> if tooltip enabled; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UISlotBase.tooltipDelay">
             <summary>
             Gets or sets the tooltip delay.
             </summary>
             <value>The tooltip delay.</value>
            </member>
        <member name="P:DuloGames.UI.UISlotBase.pressTransitionInstaOut">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UISlotBase" /> pressed state should transition out instantly.
             </summary>
             <value><c>true</c> if press transition insta out; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UISlotBase.pressForceHoverNormal">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UISlotBase" /> pressed state should force normal state transition on the hover target.
             </summary>
             <value><c>true</c> if press force hover normal; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UISlotBase.dropPreformed">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UISlotBase" /> drop was preformed.
             </summary>
             <value><c>true</c> if drop preformed; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer enter event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer exit event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnTooltip(System.Boolean)">
             <summary>
             Raises the tooltip event.
             </summary>
             <param name="show">If set to <c>true</c> show.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer down event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer up event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer click event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.IsHighlighted(UnityEngine.EventSystems.BaseEventData)">
             <summary>
             Determines whether this slot is highlighted based on the specified eventData.
             </summary>
             <returns><c>true</c> if this instance is highlighted the specified eventData; otherwise, <c>false</c>.</returns>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.IsPressed(UnityEngine.EventSystems.BaseEventData)">
             <summary>
             Determines whether this slot is pressed based on the specified eventData.
             </summary>
             <returns><c>true</c> if this instance is pressed the specified eventData; otherwise, <c>false</c>.</returns>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.EvaluateAndTransitionHoveredState(System.Boolean)">
             <summary>
             Evaluates and transitions the hovered state.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.EvaluateAndTransitionPressedState(System.Boolean)">
             <summary>
             Evaluates and transitions the pressed state.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.StartColorTween(UnityEngine.UI.Graphic,UnityEngine.Color,System.Single)">
             <summary>
             Starts a color tween.
             </summary>
             <param name="target">Target.</param>
             <param name="targetColor">Target color.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.DoSpriteSwap(UnityEngine.UI.Graphic,UnityEngine.Sprite)">
             <summary>
             Does a sprite swap.
             </summary>
             <param name="target">Target.</param>
             <param name="newSprite">New sprite.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.TriggerHoverStateAnimation(System.String)">
             <summary>
             Triggers the hover state animation.
             </summary>
             <param name="triggername">Triggername.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.TriggerPressStateAnimation(System.String)">
             <summary>
             Triggers the pressed state animation.
             </summary>
             <param name="triggername">Triggername.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.IsAssigned">
             <summary>
             Determines whether this slot is assigned.
             </summary>
             <returns><c>true</c> if this instance is assigned; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.Assign(UnityEngine.Sprite)">
             <summary>
             Assign the specified slot by icon sprite.
             </summary>
             <param name="icon">Icon.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.Assign(UnityEngine.Texture)">
             <summary>
             Assign the specified slot by icon texture.
             </summary>
             <param name="icon">Icon.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.Assign(UnityEngine.Object)">
             <summary>
             Assign the specified slot by object.
             </summary>
             <param name="source">Source.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.Unassign">
             <summary>
             Unassign this slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.GetIconSprite">
             <summary>
             Gets the icon sprite of this slot if it's set and the icon graphic is <see cref="T:UnityEngine.UI.Image" />.
             </summary>
             <returns>The icon.</returns>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.GetIconTexture">
             <summary>
             Gets the icon texture of this slot if it's set and the icon graphic is <see cref="T:UnityEngine.UI.RawImage" />.
             </summary>
             <returns>The icon.</returns>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.GetIconAsObject">
             <summary>
             Gets the icon as object.
             </summary>
             <returns>The icon as object.</returns>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.SetIcon(UnityEngine.Sprite)">
             <summary>
             Sets the icon of this slot.
             </summary>
             <param name="iconSprite">The icon sprite.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.SetIcon(UnityEngine.Texture)">
             <summary>
             Sets the icon of this slot.
             </summary>
             <param name="iconTex">The icon texture.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.ClearIcon">
             <summary>
             Clears the icon of this slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the begin drag event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.DragKeyModifierIsDown">
             <summary>
             Is the drag key modifier down.
             </summary>
             <returns><c>true</c>, if key modifier is down, <c>false</c> otherwise.</returns>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnDrag(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the drag event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnDrop(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the drop event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the end drag event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.CanSwapWith(UnityEngine.Object)">
             <summary>
             Determines whether this slot can swap with the specified target slot.
             </summary>
             <returns><c>true</c> if this instance can swap with the specified target; otherwise, <c>false</c>.</returns>
             <param name="target">Target.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.PerformSlotSwap(UnityEngine.Object)">
             <summary>
             Performs a slot swap.
             </summary>
             <param name="targetObject">Target slot.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnAssignBySlotFailed(UnityEngine.Object)">
             <summary>
             Called when the slot fails to assign by another slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnThrowAway">
             <summary>
             This method is raised to confirm throwing away the slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.OnThrowAwayDenied">
             <summary>
             This method is raised when the slot is denied to be thrown away and returned to it's source.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.CreateTemporaryIcon(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Creates the temporary icon.
             </summary>
             <returns>The temporary icon.</returns>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.UpdateDraggedPosition(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Updates the dragged icon position.
             </summary>
             <param name="data">Data.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.InternalShowTooltip">
             <summary>
             Internal call for show tooltip.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotBase.InternalHideTooltip">
             <summary>
             Internal call for hide tooltip.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISlotCooldown.IsOnCooldown">
             <summary>
             Gets a value indicating whether the cooldown is active.
             </summary>
             <value><c>true</c> if this instance is on cooldown; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:DuloGames.UI.UISlotCooldown.OnAssignSpell">
             <summary>
             Raises the assign spell event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotCooldown.OnUnassignSpell">
             <summary>
             Raises the unassign event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotCooldown.CheckForActiveCooldown">
             <summary>
             Checks if the target slot has an active cooldown and resumes it.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotCooldown.StartCooldown(System.Int32,System.Single)">
             <summary>
             Starts a cooldown.
             </summary>
             <param name="spellId">Spell identifier.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotCooldown.ResumeCooldown(System.Int32)">
             <summary>
             Resumes a cooldown.
             </summary>
             <param name="spellId">Spell identifier.</param>
            </member>
        <member name="M:DuloGames.UI.UISlotCooldown.InterruptCooldown">
             <summary>
             Interrupts the current cooldown.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotCooldown.OnCooldownCompleted">
             <summary>
             Raised when the cooldown completes it's full duration.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotCooldown.OnCooldownFinished">
             <summary>
             Raised when the cooldown finishes or has been interrupted.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISlotCooldown.UpdateFinishPosition(System.Single)">
             <summary>
             Updates the finish position based on the remaining time percentage of the cooldown.
             </summary>
             <param name="RemainingTimePct">Remaining time pct.</param>
            </member>
        <member name="P:DuloGames.UI.UISpellSlot.slotGroup">
             <summary>
             Gets or sets the slot group.
             </summary>
             <value>The slot group.</value>
            </member>
        <member name="P:DuloGames.UI.UISpellSlot.ID">
             <summary>
             Gets or sets the slot ID.
             </summary>
             <value>The I.</value>
            </member>
        <member name="F:DuloGames.UI.UISpellSlot.onAssign">
             <summary>
             The assign event delegate.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISpellSlot.onUnassign">
             <summary>
             The unassign event delegate.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISpellSlot.onClick">
             <summary>
             The click event delegate.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UISpellSlot.m_SpellInfo">
             <summary>
             The assigned spell info.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.GetSpellInfo">
             <summary>
             Gets the spell info of the spell assigned to this slot.
             </summary>
             <returns>The spell info.</returns>
            </member>
        <member name="F:DuloGames.UI.UISpellSlot.m_Cooldown">
             <summary>
             The slot cooldown component if any.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISpellSlot.cooldownComponent">
             <summary>
             Gets the cooldown component.
             </summary>
             <value>The cooldown component.</value>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.IsAssigned">
             <summary>
             Determines whether this slot is assigned.
             </summary>
             <returns><c>true</c> if this instance is assigned; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.Assign(DuloGames.UI.UISpellInfo)">
             <summary>
             Assign the slot by spell info.
             </summary>
             <param name="spellInfo">Spell info.</param>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.Assign(UnityEngine.Object)">
             <summary>
             Assign the slot by the passed source slot.
             </summary>
             <param name="source">Source.</param>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.Unassign">
             <summary>
             Unassign this slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.CanSwapWith(UnityEngine.Object)">
             <summary>
             Determines whether this slot can swap with the specified target slot.
             </summary>
             <returns><c>true</c> if this instance can swap with the specified target; otherwise, <c>false</c>.</returns>
             <param name="target">Target.</param>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:DuloGames.UI.UISpellSlot.PerformSlotSwap(UnityEngine.Object)-->
        <member name="M:DuloGames.UI.UISpellSlot.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer click event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.OnTooltip(System.Boolean)">
             <summary>
             Raises the tooltip event.
             </summary>
             <param name="show">If set to <c>true</c> show.</param>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.SetCooldownComponent(DuloGames.UI.UISlotCooldown)">
             <summary>
             Sets the cooldown component.
             </summary>
             <param name="cooldown">Cooldown.</param>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.GetSlots">
             <summary>
             Gets all the spell slots.
             </summary>
             <returns>The slots.</returns>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.GetSlotsWithID(System.Int32)">
             <summary>
             Gets all the slots with the specified ID.
             </summary>
             <returns>The slots.</returns>
             <param name="ID">The slot ID.</param>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.GetSlotsInGroup(DuloGames.UI.UISpellSlot_Group)">
             <summary>
             Gets all the slots in the specified group.
             </summary>
             <returns>The slots.</returns>
             <param name="group">The spell slot group.</param>
            </member>
        <member name="M:DuloGames.UI.UISpellSlot.GetSlot(System.Int32,DuloGames.UI.UISpellSlot_Group)">
             <summary>
             Gets the slot with the specified ID and Group.
             </summary>
             <returns>The slot.</returns>
             <param name="ID">The slot ID.</param>
             <param name="group">The slot Group.</param>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.GetSpellInfo">
             <summary>
             Gets the spell info of the spell assigned to this slot.
             </summary>
             <returns>The spell info.</returns>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.GetTalentInfo">
             <summary>
             Gets the talent info of the talent assigned to this slot.
             </summary>
             <returns>The talent info.</returns>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.IsAssigned">
             <summary>
             Determines whether this slot is assigned.
             </summary>
             <returns><c>true</c> if this instance is assigned; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.Assign(DuloGames.UI.UITalentInfo,DuloGames.UI.UISpellInfo)">
             <summary>
             Assign the specified slot by talentInfo and spellInfo.
             </summary>
             <param name="talentInfo">Talent info.</param>
             <param name="spellInfo">Spell info.</param>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.UpdatePointsLabel">
             <summary>
             Updates the points label.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.Unassign">
             <summary>
             Unassign this slot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer click event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.OnRightPointerClick(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the right click event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.AddPoints(System.Int32)">
             <summary>
             Adds points.
             </summary>
             <param name="points">Points.</param>
            </member>
        <member name="M:DuloGames.UI.UITalentSlot.OnTooltip(System.Boolean)">
             <summary>
             Raises the tooltip event.
             </summary>
             <param name="show">If set to <c>true</c> show.</param>
            </member>
        <member name="T:DuloGames.UI.UILoadingOverlay">
             <summary>
             Loading Overlay
             This script requires to be attached to a canvas.
             The canvas must have the highest sorting order.
             The canvas must have a GraphicRaycaster.
             The visibility of the overlay is controlled by a CanvasGroup alpha.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UILoadingOverlay.LoadScene(System.String)">
             <summary>
             Shows the loading overlay and loads the scene.
             </summary>
             <param name="sceneName">The scene name.</param>
            </member>
        <member name="M:DuloGames.UI.UILoadingOverlay.LoadScene(System.Int32)">
             <summary>
             Shows the loading overlay and loads the scene.
             </summary>
             <param name="sceneIndex">The scene build index.</param>
            </member>
        <member name="M:DuloGames.UI.UILoadingOverlay.StartAlphaTween(System.Single,System.Single,System.Boolean)">
             <summary>
             Starts alpha tween.
             </summary>
             <param name="targetAlpha">Target alpha.</param>
             <param name="duration">Duration.</param>
             <param name="ignoreTimeScale">If set to <c>true</c> ignore time scale.</param>
            </member>
        <member name="M:DuloGames.UI.UILoadingOverlay.SetCanvasAlpha(System.Single)">
             <summary>
             Sets the canvas alpha.
             </summary>
             <param name="alpha">Alpha.</param>
            </member>
        <member name="M:DuloGames.UI.UILoadingOverlay.OnTweenFinished">
             <summary>
             Raises the list tween finished event.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UILoadingOverlayManager.prefab">
             <summary>
             Gets the loading overlay prefab.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UILoadingOverlayManager.Create">
             <summary>
             Creates a loading overlay.
             </summary>
             <returns>The loading overlay component.</returns>
            </member>
        <member name="P:DuloGames.UI.UIFlippable.horizontal">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UIFlippable" /> should be flipped horizontally.
             </summary>
             <value><c>true</c> if horizontal; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UIFlippable.vertical">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UIFlippable" /> should be flipped vertically.
             </summary>
             <value><c>true</c> if vertical; otherwise, <c>false</c>.</value>
            </member>
        <member name="T:DuloGames.UI.UIScrollRectExpander">
             <summary>
             The scroll rect expander is really simple, you place it on the scroll bar and it monitors when the bar is disabled.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIModalBox.isActive">
             <summary>
             Gets a value indicating whether this modal box is active.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIModalBox.SetText1(System.String)">
             <summary>
             Sets the text on the first line.
             </summary>
             <param name="text"></param>
            </member>
        <member name="M:DuloGames.UI.UIModalBox.SetText2(System.String)">
             <summary>
             Sets the text on the second line.
             </summary>
             <param name="text"></param>
            </member>
        <member name="M:DuloGames.UI.UIModalBox.SetConfirmButtonText(System.String)">
             <summary>
             Sets the confirm button text.
             </summary>
             <param name="text">The confirm button text.</param>
            </member>
        <member name="M:DuloGames.UI.UIModalBox.SetCancelButtonText(System.String)">
             <summary>
             Sets the cancel button text.
             </summary>
             <param name="text">The cancel button text.</param>
            </member>
        <member name="M:DuloGames.UI.UIModalBox.Show">
             <summary>
             Shows the modal box.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIModalBox.Close">
             <summary>
             Closes the modal box.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIModalBoxManager.prefab">
             <summary>
             Gets the modal box prefab.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIModalBoxManager.Create(UnityEngine.GameObject)">
             <summary>
             Creates a modal box
             </summary>
             <param name="rel">Relative game object used to find the canvas.</param>
            </member>
        <member name="P:DuloGames.UI.UICircularRaycastFilter.radiusInPercents">
             <summary>
             Gets or sets a value indicating whether the <see cref="T:DuloGames.UI.UICircularRaycastFilter" /> radius value is in percents.
             </summary>
             <value><c>true</c> if radius in percents; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UICircularRaycastFilter.radius">
             <summary>
             Gets or sets the radius.
             </summary>
             <value>The radius.</value>
            </member>
        <member name="P:DuloGames.UI.UICircularRaycastFilter.offset">
             <summary>
             Gets or sets the offset.
             </summary>
             <value>The offset.</value>
            </member>
        <member name="P:DuloGames.UI.UICircularRaycastFilter.center">
             <summary>
             Gets the center of the rect from bottom-left point.
             </summary>
             <value>The center.</value>
            </member>
        <member name="P:DuloGames.UI.UICircularRaycastFilter.rectMaxRadius">
             <summary>
             Gets the rect max radius.
             </summary>
             <returns>The rect max radius.</returns>
            </member>
        <member name="P:DuloGames.UI.UICircularRaycastFilter.operationalRadius">
             <summary>
             Gets the operational radius.
             </summary>
             <value>The operational radius.</value>
            </member>
        <member name="P:DuloGames.UI.UIRectangularRaycastFilter.offset">
             <summary>
             Gets or sets the offset.
             </summary>
             <value>The offset.</value>
            </member>
        <member name="P:DuloGames.UI.UIRectangularRaycastFilter.borders">
             <summary>
             Gets or sets the borders.
             </summary>
             <value>The borders.</value>
            </member>
        <member name="P:DuloGames.UI.UIRectangularRaycastFilter.scaleX">
             <summary>
             Gets or sets the X scale.
             </summary>
             <value>The X scale.</value>
            </member>
        <member name="P:DuloGames.UI.UIRectangularRaycastFilter.scaleY">
             <summary>
             Gets or sets the Y scale.
             </summary>
             <value>The Y scale.</value>
            </member>
        <member name="P:DuloGames.UI.UIRectangularRaycastFilter.scaledRect">
             <summary>
             Gets the scaled rect including the offset.
             </summary>
             <value>The scaled rect.</value>
            </member>
        <member name="P:DuloGames.UI.UIScene.id">
             <summary>
             Gets the scene id.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.isActivated">
             <summary>
             Gets or sets value indicating whether the scene is activated.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.type">
             <summary>
             Gets the scene type.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.content">
             <summary>
             Gets or sets the scene content holder.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.transition">
             <summary>
             Gets or sets the scene transition.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.transitionDuration">
             <summary>
             Gets or sets the transition duration.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.transitionEasing">
             <summary>
             Gets or set the transition easing.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.animateInTrigger">
             <summary>
             Gets or sets the animate in trigger.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.animateOutTrigger">
             <summary>
             Gets or sets the animate out trigger.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIScene.onActivate">
             <summary>
             Invoked when the scene is activated.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIScene.onDeactivate">
             <summary>
             Invoked when the scene is deactivated.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.rectTransform">
             <summary>
             Gets the rect transform.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIScene.animator">
             <summary>
             Gets the animator.
             </summary>
             <value>The animator.</value>
            </member>
        <member name="M:DuloGames.UI.UIScene.Activate">
             <summary>
             Activate the scene, no transition is used.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIScene.Deactivate">
             <summary>
             Deactivate the scene, no transition is used.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIScene.TransitionTo">
             <summary>
             Transition to the scene.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIScene.TransitionIn">
             <summary>
             Transition the scene in.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIScene.TransitionIn(DuloGames.UI.UIScene.Transition,System.Single,DuloGames.UI.Tweens.TweenEasing)">
             <summary>
             Transition the scene in.
             </summary>
             <param name="transition">The transition.</param>
             <param name="duration">The transition duration.</param>
             <param name="easing">The transition easing.</param>
            </member>
        <member name="M:DuloGames.UI.UIScene.TransitionOut">
             <summary>
             Transition the scene out.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIScene.TransitionOut(DuloGames.UI.UIScene.Transition,System.Single,DuloGames.UI.Tweens.TweenEasing)">
             <summary>
             Transition the scene out.
             </summary>
             <param name="transition">The transition.</param>
             <param name="duration">The transition duration.</param>
             <param name="easing">The transition easing.</param>
            </member>
        <member name="M:DuloGames.UI.UIScene.StartAlphaTween(System.Single,System.Single,DuloGames.UI.Tweens.TweenEasing,System.Boolean,UnityEngine.Events.UnityAction)">
             <summary>
             Starts alpha tween.
             </summary>
             <param name="targetAlpha">Target alpha.</param>
             <param name="duration">Duration.</param>
             <param name="easing">Easing.</param>
             <param name="ignoreTimeScale">If set to <c>true</c> ignore time scale.</param>
             <param name="callback">Event to be called on transition finish.</param>
            </member>
        <member name="M:DuloGames.UI.UIScene.SetCanvasAlpha(System.Single)">
             <summary>
             Sets the canvas alpha.
             </summary>
             <param name="alpha">Alpha.</param>
            </member>
        <member name="M:DuloGames.UI.UIScene.SetPositionX(System.Single)">
             <summary>
             Sets the rect transform anchored position X.
             </summary>
             <param name="x">The X position.</param>
            </member>
        <member name="M:DuloGames.UI.UIScene.SetPositionY(System.Single)">
             <summary>
             Sets the rect transform anchored position Y.
             </summary>
             <param name="y">The Y position.</param>
            </member>
        <member name="M:DuloGames.UI.UIScene.TriggerAnimation(System.String)">
             <summary>
             Triggers animation.
             </summary>
             <param name="triggername"></param>
            </member>
        <member name="M:DuloGames.UI.UIScene.OnTransitionIn">
             <summary>
             Raises the transition in finished event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIScene.OnTransitionOut">
             <summary>
             Raises the transition out finished event.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISceneManager.instance">
             <summary>
             Get the scene manager if any exists.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISceneManager.scenes">
             <summary>
             Get all the registered scenes.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISceneManager.RegisterScene(DuloGames.UI.UIScene)">
             <summary>
             Register a scene.
             </summary>
             <param name="scene"></param>
            </member>
        <member name="M:DuloGames.UI.UISceneManager.UnregisterScene(DuloGames.UI.UIScene)">
             <summary>
             Unregister a scene.
             </summary>
             <param name="scene"></param>
            </member>
        <member name="M:DuloGames.UI.UISceneManager.GetActiveScenes">
             <summary>
             Get all the active scenes.
             </summary>
             <returns></returns>
            </member>
        <member name="M:DuloGames.UI.UISceneManager.GetScene(System.Int32)">
             <summary>
             Get the scene with the specified id. Returns null if not found.
             </summary>
             <param name="id"></param>
             <returns></returns>
            </member>
        <member name="M:DuloGames.UI.UISceneManager.GetAvailableSceneId">
             <summary>
             Get the next available scene id;
             </summary>
             <returns></returns>
            </member>
        <member name="M:DuloGames.UI.UISceneManager.TransitionToScene(DuloGames.UI.UIScene)">
             <summary>
             Transitions out of the active scene and in to the new one.
             </summary>
             <param name="scene"></param>
            </member>
        <member name="P:DuloGames.UI.UISceneRegistry.scenes">
             <summary>
             Get all the registered scenes.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UISceneRegistry.lastScene">
             <summary>
             Get the last active scene before the current one.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UISceneRegistry.RegisterScene(DuloGames.UI.UIScene)">
             <summary>
             Register a scene.
             </summary>
             <param name="scene"></param>
            </member>
        <member name="M:DuloGames.UI.UISceneRegistry.UnregisterScene(DuloGames.UI.UIScene)">
             <summary>
             Unregister a scene.
             </summary>
             <param name="scene"></param>
            </member>
        <member name="M:DuloGames.UI.UISceneRegistry.GetActiveScenes">
             <summary>
             Get all the active scenes.
             </summary>
             <returns></returns>
            </member>
        <member name="M:DuloGames.UI.UISceneRegistry.GetScene(System.Int32)">
             <summary>
             Get the scene with the specified id. Returns null if not found.
             </summary>
             <param name="id"></param>
             <returns></returns>
            </member>
        <member name="M:DuloGames.UI.UISceneRegistry.GetAvailableSceneId">
             <summary>
             Get the next available scene id;
             </summary>
             <returns></returns>
            </member>
        <member name="M:DuloGames.UI.UISceneRegistry.TransitionToScene(DuloGames.UI.UIScene)">
             <summary>
             Transitions out of the active scene and in to the new one.
             </summary>
             <param name="scene"></param>
            </member>
        <member name="F:DuloGames.UI.UITooltip.DefaultHorizontalFitMode">
             <summary>
             The default horizontal fit mode.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltip.defaultWidth">
             <summary>
             Gets or sets the default width of the tooltip.
             </summary>
             <value>The default width.</value>
            </member>
        <member name="P:DuloGames.UI.UITooltip.followMouse">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UITooltip" /> should follow the mouse movement.
             </summary>
             <value><c>true</c> if follow mouse; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UITooltip.offset">
             <summary>
             Gets or sets the tooltip offset (from the pointer).
             </summary>
             <value>The offset.</value>
            </member>
        <member name="P:DuloGames.UI.UITooltip.anchoring">
             <summary>
             Gets or sets the anchoring of the tooltip.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltip.anchoredOffset">
             <summary>
             Gets or sets the tooltip anchored offset (from the anchored rect).
             </summary>
             <value>The anchored offset.</value>
            </member>
        <member name="P:DuloGames.UI.UITooltip.alpha">
             <summary>
             Gets the alpha of the tooltip.
             </summary>
             <value>The alpha.</value>
            </member>
        <member name="P:DuloGames.UI.UITooltip.visualState">
             <summary>
             Gets the the visual state of the tooltip.
             </summary>
             <value>The state of the visual.</value>
            </member>
        <member name="P:DuloGames.UI.UITooltip.uiCamera">
             <summary>
             Gets the camera responsible for the tooltip.
             </summary>
             <value>The camera.</value>
            </member>
        <member name="P:DuloGames.UI.UITooltip.transition">
             <summary>
             Gets or sets the transition.
             </summary>
             <value>The transition.</value>
            </member>
        <member name="P:DuloGames.UI.UITooltip.transitionEasing">
             <summary>
             Gets or sets the transition easing.
             </summary>
             <value>The transition easing.</value>
            </member>
        <member name="P:DuloGames.UI.UITooltip.transitionDuration">
             <summary>
             Gets or sets the duration of the transition.
             </summary>
             <value>The duration of the transition.</value>
            </member>
        <member name="M:DuloGames.UI.UITooltip.UpdatePositionAndPivot">
             <summary>
             Updates the tooltip position.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.UpdatePivot">
             <summary>
             Updates the pivot.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.SetPivot(UnityEngine.Vector2)">
             <summary>
             Sets the pivot.
             </summary>
             <param name="pivot">The pivot.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.SetPivot(DuloGames.UI.UITooltip.Corner)">
             <summary>
             Sets the pivot corner.
             </summary>
             <param name="point">Point.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_Show">
             <summary>
             Shows the tooltip.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_Hide">
             <summary>
             Hides the tooltip.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AnchorToRect(UnityEngine.RectTransform)">
             <summary>
             Sets the anchor rect target.
             </summary>
             <param name="targetRect">Target rect.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_SetWidth(System.Single)">
             <summary>
             Sets the width of the toolip.
             </summary>
             <param name="width">Width.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_SetHorizontalFitMode(UnityEngine.UI.ContentSizeFitter.FitMode)">
             <summary>
             Sets the horizontal fit mode of the tooltip.
             </summary>
             <param name="mode">Mode.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_OverrideOffset(UnityEngine.Vector2)">
             <summary>
             Overrides the offset for a single display of the tooltip.
             </summary>
             <param name="offset">The override offset.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_OverrideAnchoredOffset(UnityEngine.Vector2)">
             <summary>
             Overrides the anchored offset for a single display of the tooltip.
             </summary>
             <param name="offset">The override anchored offset.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.EvaluateAndTransitionToState(System.Boolean,System.Boolean)">
             <summary>
             Evaluates and transitions to the given state.
             </summary>
             <param name="state">If set to <c>true</c> transition to shown <c>false</c> otherwise.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.SetAlpha(System.Single)">
             <summary>
             Sets the alpha of the tooltip.
             </summary>
             <param name="alpha">Alpha.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.StartAlphaTween(System.Single,System.Single)">
             <summary>
             Starts a alpha tween on the tooltip.
             </summary>
             <param name="targetAlpha">Target alpha.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.OnTweenFinished">
             <summary>
             Raises the tween finished event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.InternalOnHide">
             <summary>
             Called internally when the tooltip finishes the hide transition.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.EvaluateAndCreateTooltipLines">
             <summary>
             Evaluates and creates the tooltip lines.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.CreateLine(UnityEngine.RectOffset)">
             <summary>
             Creates new line object.
             </summary>
             <returns>The attribute row.</returns>
            </member>
        <member name="M:DuloGames.UI.UITooltip.CreateLineColumn(UnityEngine.Transform,System.String,System.Boolean,DuloGames.UI.UITooltipLines.LineStyle,System.String)">
             <summary>
             Creates new line column object.
             </summary>
             <param name="parent">Parent.</param>
             <param name="content">Content.</param>
             <param name="isLeft">If set to <c>true</c> is left.</param>
             <param name="style">The style.</param>
             <param name="customStyle">The custom style name.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.CleanupLines">
             <summary>
             Does a line cleanup.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_SetLines(DuloGames.UI.UITooltipLines)">
             <summary>
             Sets the lines template.
             </summary>
             <param name="lines">Lines template.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddLine(System.String,UnityEngine.RectOffset)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="a">Content.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddLine(System.String,DuloGames.UI.UITooltipLines.LineStyle)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="a">Content.</param>
             <param name="style">The line style.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddLine(System.String,System.String)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="a">Content.</param>
             <param name="customStyle">The custom line style name.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddLine(System.String,UnityEngine.RectOffset,DuloGames.UI.UITooltipLines.LineStyle)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="a">Content.</param>
             <param name="style">The line style.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddLine(System.String,UnityEngine.RectOffset,System.String)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="a">Content.</param>
             <param name="padding">The line padding.</param>
             <param name="customStyle">The custom line style name.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddLineColumn(System.String)">
             <summary>
             Adds a column (Either to the last line if it's not complete or to a new one).
             </summary>
             <param name="a">Content.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddLineColumn(System.String,DuloGames.UI.UITooltipLines.LineStyle)">
             <summary>
             Adds a column (Either to the last line if it's not complete or to a new one).
             </summary>
             <param name="a">Content.</param>
             <param name="style">The line style.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddLineColumn(System.String,System.String)">
             <summary>
             Adds a column (Either to the last line if it's not complete or to a new one).
             </summary>
             <param name="a">Content.</param>
             <param name="style">The custom line style name.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddTitle(System.String)">
             <summary>
             Adds title line.
             </summary>
             <param name="title">Tooltip title.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddDescription(System.String)">
             <summary>
             Adds description line.
             </summary>
             <param name="description">Tooltip description.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Internal_AddSpacer">
             <summary>
             Adds spacer line.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.SetLines(DuloGames.UI.UITooltipLines)">
             <summary>
             Sets the lines template.
             </summary>
             <param name="lines">Lines template.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddLine(System.String)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="content">Content.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddLine(System.String,DuloGames.UI.UITooltipLines.LineStyle)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="content">Content.</param>
             <param name="style">The line style.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddLine(System.String,System.String)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="content">Content.</param>
             <param name="customStyle">The custom line style name.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddLine(System.String,UnityEngine.RectOffset)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="content">Content.</param>
             <param name="padding">The line padding.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddLine(System.String,UnityEngine.RectOffset,DuloGames.UI.UITooltipLines.LineStyle)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="content">Content.</param>
             <param name="padding">The line padding.</param>
             <param name="style">The line style.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddLine(System.String,UnityEngine.RectOffset,System.String)">
             <summary>
             Adds a new single column line.
             </summary>
             <param name="content">Content.</param>
             <param name="padding">The line padding.</param>
             <param name="customStyle">The custom line style name.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddLineColumn(System.String)">
             <summary>
             Adds a column (Either to the last line if it's not complete or to a new one).
             </summary>
             <param name="content">Content.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddLineColumn(System.String,DuloGames.UI.UITooltipLines.LineStyle)">
             <summary>
             Adds a column (Either to the last line if it's not complete or to a new one).
             </summary>
             <param name="content">Content.</param>
             <param name="style">The line style.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddLineColumn(System.String,System.String)">
             <summary>
             Adds a column (Either to the last line if it's not complete or to a new one).
             </summary>
             <param name="content">Content.</param>
             <param name="customStyle">The custom line style name.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddSpacer">
             <summary>
             Adds a spacer line.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.InstantiateIfNecessary(UnityEngine.GameObject)">
             <summary>
             Instantiate the tooltip game object if necessary.
             </summary>
             <param name="rel">Relative game object used to find the canvas.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddTitle(System.String)">
             <summary>
             Adds title line.
             </summary>
             <param name="title">Tooltip title.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AddDescription(System.String)">
             <summary>
             Adds description line.
             </summary>
             <param name="description">Tooltip description.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Show">
             <summary>
             Show the tooltip.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.Hide">
             <summary>
             Hide the tooltip.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltip.AnchorToRect(UnityEngine.RectTransform)">
             <summary>
             Anchors the tooltip to a rect.
             </summary>
             <param name="targetRect">Target rect.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.SetHorizontalFitMode(UnityEngine.UI.ContentSizeFitter.FitMode)">
             <summary>
             Sets the horizontal fit mode of the tooltip.
             </summary>
             <param name="mode">Mode.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.SetWidth(System.Single)">
             <summary>
             Sets the width of the toolip.
             </summary>
             <param name="width">Width.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.OverrideOffset(UnityEngine.Vector2)">
             <summary>
             Overrides the offset for single display of the tooltip.
             </summary>
             <param name="offset">The override offset.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.OverrideAnchoredOffset(UnityEngine.Vector2)">
             <summary>
             Overrides the anchored offset for single display of the tooltip.
             </summary>
             <param name="offset">The override anchored offset.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.VectorPivotToCorner(UnityEngine.Vector2)">
             <summary>
             Convert vector pivot to corner.
             </summary>
             <returns>The corner.</returns>
             <param name="pivot">Pivot.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.VectorPivotToAnchor(UnityEngine.Vector2)">
             <summary>
             Convert vector pivot to anchor.
             </summary>
             <returns>The anchor.</returns>
             <param name="pivot">Pivot.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.GetOppositeCorner(DuloGames.UI.UITooltip.Corner)">
             <summary>
             Gets the opposite corner.
             </summary>
             <returns>The opposite corner.</returns>
             <param name="corner">Corner.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltip.GetOppositeAnchor(DuloGames.UI.UITooltip.Anchor)">
             <summary>
             Gets the opposite anchor.
             </summary>
             <returns>The opposite anchor.</returns>
             <param name="anchor">Anchor.</param>
            </member>
        <member name="F:DuloGames.UI.UITooltipLines.lineList">
             <summary>
             The lines list.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddLine(System.String,System.String)">
             <summary>
             Adds a line to the list.
             </summary>
             <param name="leftContent">Left content.</param>
             <param name="rightContent">Right content.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddLine(System.String,System.String,UnityEngine.RectOffset)">
             <summary>
             Adds a line to the list.
             </summary>
             <param name="leftContent">Left content.</param>
             <param name="rightContent">Right content.</param>
             <param name="padding">Row padding.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddLine(System.String)">
             <summary>
             Adds a single column line to the list.
             </summary>
             <param name="content">Content.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddLine(System.String,UnityEngine.RectOffset)">
             <summary>
             Adds a single column line to the list.
             </summary>
             <param name="content">Content.</param>
             <param name="padding">Row padding.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddLine(System.String,UnityEngine.RectOffset,DuloGames.UI.UITooltipLines.LineStyle)">
             <summary>
             Adds a single column line to the list.
             </summary>
             <param name="content">Content.</param>
             <param name="padding">Row padding.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddLine(System.String,UnityEngine.RectOffset,System.String)">
             <summary>
             Adds a single column line to the list.
             </summary>
             <param name="content">Content.</param>
             <param name="padding">Row padding.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddLine(System.String,System.String,UnityEngine.RectOffset,DuloGames.UI.UITooltipLines.LineStyle)">
             <summary>
             Adds a line to the list.
             </summary>
             <param name="leftContent">Left content.</param>
             <param name="rightContent">Right content.</param>
             <param name="padding">Row padding.</param>
             <param name="style">Style.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddLine(System.String,System.String,UnityEngine.RectOffset,System.String)">
             <summary>
             Adds a line to the list.
             </summary>
             <param name="leftContent">Left content.</param>
             <param name="rightContent">Right content.</param>
             <param name="padding">Row padding.</param>
             <param name="customStyle">Custom style name.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddColumn(System.String)">
             <summary>
             Adds a column to the last line or to a new one.
             </summary>
             <param name="content">Content.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddColumn(System.String,DuloGames.UI.UITooltipLines.LineStyle)">
             <summary>
             Adds a column to the last line or to a new one.
             </summary>
             <param name="content">Content.</param>
             <param name="style">The line style.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddColumn(System.String,System.String)">
             <summary>
             Adds a column to the last line or to a new one.
             </summary>
             <param name="content">Content.</param>
             <param name="customStyle">The custom line style name.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipLines.AddColumn(System.String,DuloGames.UI.UITooltipLines.LineStyle,System.String)">
             <summary>
             Adds a column to the last line or to a new one.
             </summary>
             <param name="content">Content.</param>
             <param name="style">The line style.</param>
             <param name="customStyle">The custom line style name.</param>
            </member>
        <member name="P:DuloGames.UI.UITooltipManager.prefab">
             <summary>
             Gets the tooltip prefab.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltipManager.spacerHeight">
             <summary>
             Spacer height used for the spacer line.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltipManager.itemTooltipWidth">
             <summary>
             The width used for the item tooltip.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltipManager.spellTooltipWidth">
             <summary>
             The width used for the spell tooltip.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltipManager.defaultLineStyle">
             <summary>
             Default line style used when no style is specified.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltipManager.titleLineStyle">
             <summary>
             Title line style used for the tooltip title.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltipManager.attributeLineStyle">
             <summary>
             Attribute line style.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltipManager.descriptionLineStyle">
             <summary>
             Description line style used for the description.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UITooltipManager.customStyles">
             <summary>
             The custom styles array.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltipManager.GetCustomStyle(System.String)">
             <summary>
             Gets a custom style by the specified name.
             </summary>
             <param name="name">The custom style name.</param>
             <returns>The custom style or the default style if not found.</returns>
            </member>
        <member name="P:DuloGames.UI.UITooltipShow.contentLines">
             <summary>
             Gets or sets the tooltip content lines.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltipShow.OnTooltip(System.Boolean)">
             <summary>
             Raises the tooltip event.
             </summary>
             <param name="show">If set to <c>true</c> show.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipShow.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer enter event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipShow.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer exit event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipShow.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer down event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipShow.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer up event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UITooltipShow.InternalShowTooltip">
             <summary>
             Internal call for show tooltip.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UITooltipShow.InternalHideTooltip">
             <summary>
             Internal call for hide tooltip.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIEffectTransition.InstantClearState">
             <summary>
             Instantly clears the visual state.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIEffectTransition.InternalEvaluateAndTransitionToNormalState(System.Boolean)">
             <summary>
             Internally evaluates and transitions to normal state.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIEffectTransition.DoStateTransition(DuloGames.UI.UIEffectTransition.VisualState,System.Boolean)">
             <summary>
             Does the state transition.
             </summary>
             <param name="state">State.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIEffectTransition.SetEffectColor(UnityEngine.Color)">
             <summary>
             Sets the effect color.
             </summary>
             <param name="targetColor">Target color.</param>
            </member>
        <member name="P:DuloGames.UI.UIHighlightTransition.transition">
             <summary>
             Gets or sets the transition type.
             </summary>
             <value>The transition.</value>
            </member>
        <member name="P:DuloGames.UI.UIHighlightTransition.targetGraphic">
             <summary>
             Gets or sets the target graphic.
             </summary>
             <value>The target graphic.</value>
            </member>
        <member name="P:DuloGames.UI.UIHighlightTransition.targetGameObject">
             <summary>
             Gets or sets the target game object.
             </summary>
             <value>The target game object.</value>
            </member>
        <member name="P:DuloGames.UI.UIHighlightTransition.animator">
             <summary>
             Gets the animator.
             </summary>
             <value>The animator.</value>
            </member>
        <member name="M:DuloGames.UI.UIHighlightTransition.InstantClearState">
             <summary>
             Instantly clears the visual state.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIHighlightTransition.InternalEvaluateAndTransitionToNormalState(System.Boolean)">
             <summary>
             Internally evaluates and transitions to normal state.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIHighlightTransition.DoStateTransition(DuloGames.UI.UIHighlightTransition.VisualState,System.Boolean)">
             <summary>
             Does the state transition.
             </summary>
             <param name="state">State.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIHighlightTransition.StartColorTween(UnityEngine.Color,System.Boolean)">
             <summary>
             Starts the color tween.
             </summary>
             <param name="targetColor">Target color.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIHighlightTransition.SetTextColor(UnityEngine.Color)">
             <summary>
             Sets the text color.
             </summary>
             <param name="targetColor">Target color.</param>
            </member>
        <member name="P:DuloGames.UI.UIPressTransition.transition">
             <summary>
             Gets or sets the transition type.
             </summary>
             <value>The transition.</value>
            </member>
        <member name="P:DuloGames.UI.UIPressTransition.targetGraphic">
             <summary>
             Gets or sets the target graphic.
             </summary>
             <value>The target graphic.</value>
            </member>
        <member name="P:DuloGames.UI.UIPressTransition.targetGameObject">
             <summary>
             Gets or sets the target game object.
             </summary>
             <value>The target game object.</value>
            </member>
        <member name="P:DuloGames.UI.UIPressTransition.animator">
             <summary>
             Gets the animator.
             </summary>
             <value>The animator.</value>
            </member>
        <member name="M:DuloGames.UI.UIPressTransition.InstantClearState">
             <summary>
             Instantly clears the visual state.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIPressTransition.InternalEvaluateAndTransitionToNormalState(System.Boolean)">
             <summary>
             Internally evaluates and transitions to normal state.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIPressTransition.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer down event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UIPressTransition.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer up event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UIPressTransition.DoStateTransition(DuloGames.UI.UIPressTransition.VisualState,System.Boolean)">
             <summary>
             Does the state transition.
             </summary>
             <param name="state">State.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIPressTransition.StartColorTween(UnityEngine.Color,System.Boolean)">
             <summary>
             Starts the color tween.
             </summary>
             <param name="targetColor">Target color.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIPressTransition.SetTextColor(UnityEngine.Color)">
             <summary>
             Sets the text color.
             </summary>
             <param name="targetColor">Target color.</param>
            </member>
        <member name="P:DuloGames.UI.Tweens.ColorTween.startColor">
             <summary>
             Gets or sets the starting color.
             </summary>
             <value>The start color.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.ColorTween.targetColor">
             <summary>
             Gets or sets the target color.
             </summary>
             <value>The color of the target.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.ColorTween.duration">
             <summary>
             Gets or sets the duration of the tween.
             </summary>
             <value>The duration.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.ColorTween.ignoreTimeScale">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.Tweens.ColorTween" /> should ignore time scale.
             </summary>
             <value><c>true</c> if ignore time scale; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.ColorTween.easing">
             <summary>
             Gets or sets the tween easing.
             </summary>
             <value>The easing.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.ColorTween.tweenMode">
             <summary>
             Gets or sets the tween mode.
             </summary>
             <value>The tween mode.</value>
            </member>
        <member name="M:DuloGames.UI.Tweens.ColorTween.TweenValue(System.Single)">
             <summary>
             Tweens the color based on percentage.
             </summary>
             <param name="floatPercentage">Float percentage.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.ColorTween.AddOnChangedCallback(UnityEngine.Events.UnityAction{UnityEngine.Color})">
             <summary>
             Adds a on changed callback.
             </summary>
             <param name="callback">Callback.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.ColorTween.AddOnFinishCallback(UnityEngine.Events.UnityAction)">
             <summary>
             Adds a on finish callback.
             </summary>
             <param name="callback">Callback.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.ColorTween.Finished">
             <summary>
             Invokes the on finish callback.
             </summary>
            </member>
        <member name="P:DuloGames.UI.Tweens.FloatTween.startFloat">
             <summary>
             Gets or sets the starting float.
             </summary>
             <value>The start float.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.FloatTween.targetFloat">
             <summary>
             Gets or sets the target float.
             </summary>
             <value>The target float.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.FloatTween.duration">
             <summary>
             Gets or sets the duration of the tween.
             </summary>
             <value>The duration.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.FloatTween.ignoreTimeScale">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.Tweens.ColorTween" /> should ignore time scale.
             </summary>
             <value><c>true</c> if ignore time scale; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.FloatTween.easing">
             <summary>
             Gets or sets the tween easing.
             </summary>
             <value>The easing.</value>
            </member>
        <member name="M:DuloGames.UI.Tweens.FloatTween.TweenValue(System.Single)">
             <summary>
             Tweens the float based on percentage.
             </summary>
             <param name="floatPercentage">Float percentage.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.FloatTween.AddOnChangedCallback(UnityEngine.Events.UnityAction{System.Single})">
             <summary>
             Adds a on changed callback.
             </summary>
             <param name="callback">Callback.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.FloatTween.AddOnFinishCallback(UnityEngine.Events.UnityAction)">
             <summary>
             Adds a on finish callback.
             </summary>
             <param name="callback">Callback.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.FloatTween.Finished">
             <summary>
             Invokes the on finish callback.
             </summary>
            </member>
        <member name="M:DuloGames.UI.Tweens.TweenEasingHandler.Apply(DuloGames.UI.Tweens.TweenEasing,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Apply the specified easingType, t, b, c and d.
             </summary>
             <param name="e">Easing type.</param>
             <param name="t">Elapsed time.</param>
             <param name="b">Starting value.</param>
             <param name="c">Target value.</param>
             <param name="d">Duration.</param>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector2Tween.startVector2">
             <summary>
             Gets or sets the starting Vector2.
             </summary>
             <value>The start color.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector2Tween.targetVector2">
             <summary>
             Gets or sets the target Vector2.
             </summary>
             <value>The color of the target.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector2Tween.duration">
             <summary>
             Gets or sets the duration of the tween.
             </summary>
             <value>The duration.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector2Tween.ignoreTimeScale">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.Tweens.ColorTween" /> should ignore time scale.
             </summary>
             <value><c>true</c> if ignore time scale; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector2Tween.easing">
             <summary>
             Gets or sets the tween easing.
             </summary>
             <value>The easing.</value>
            </member>
        <member name="M:DuloGames.UI.Tweens.Vector2Tween.TweenValue(System.Single)">
             <summary>
             Tweens the color based on percentage.
             </summary>
             <param name="floatPercentage">Float percentage.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.Vector2Tween.AddOnChangedCallback(UnityEngine.Events.UnityAction{UnityEngine.Vector2})">
             <summary>
             Adds a on changed callback.
             </summary>
             <param name="callback">Callback.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.Vector2Tween.AddOnFinishCallback(UnityEngine.Events.UnityAction)">
             <summary>
             Adds a on finish callback.
             </summary>
             <param name="callback">Callback.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.Vector2Tween.Finished">
             <summary>
             Invokes the on finish callback.
             </summary>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector3Tween.startVector3">
             <summary>
             Gets or sets the starting Vector3.
             </summary>
             <value>The start color.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector3Tween.targetVector3">
             <summary>
             Gets or sets the target Vector3.
             </summary>
             <value>The color of the target.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector3Tween.duration">
             <summary>
             Gets or sets the duration of the tween.
             </summary>
             <value>The duration.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector3Tween.ignoreTimeScale">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.Tweens.ColorTween" /> should ignore time scale.
             </summary>
             <value><c>true</c> if ignore time scale; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.Tweens.Vector3Tween.easing">
             <summary>
             Gets or sets the tween easing.
             </summary>
             <value>The easing.</value>
            </member>
        <member name="M:DuloGames.UI.Tweens.Vector3Tween.TweenValue(System.Single)">
             <summary>
             Tweens the color based on percentage.
             </summary>
             <param name="floatPercentage">Float percentage.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.Vector3Tween.AddOnChangedCallback(UnityEngine.Events.UnityAction{UnityEngine.Vector3})">
             <summary>
             Adds a on changed callback.
             </summary>
             <param name="callback">Callback.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.Vector3Tween.AddOnFinishCallback(UnityEngine.Events.UnityAction)">
             <summary>
             Adds a on finish callback.
             </summary>
             <param name="callback">Callback.</param>
            </member>
        <member name="M:DuloGames.UI.Tweens.Vector3Tween.Finished">
             <summary>
             Invokes the on finish callback.
             </summary>
            </member>
        <member name="T:DuloGames.UI.UIAlwaysOnTop">
             <summary>
             This components is used when using the UIUtility to bring objects forward.
             When an object is being brought forward any objects with this component will be kept on top in the specified order.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIAlwaysOnTop.order">
             <summary>
             Gets or sets the order.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIDragObject.onBeginDrag">
             <summary>
             The on begin drag event.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIDragObject.onEndDrag">
             <summary>
             The on end drag event.
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIDragObject.onDrag">
             <summary>
             The on drag event.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIDragObject.target">
             <summary>
             Gets or sets the target.
             </summary>
             <value>The target.</value>
            </member>
        <member name="P:DuloGames.UI.UIDragObject.horizontal">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UIDragObject" /> is allowed horizontal movement.
             </summary>
             <value><c>true</c> if horizontal; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UIDragObject.vertical">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UIDragObject" /> is allowed vertical movement.
             </summary>
             <value><c>true</c> if vertical; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UIDragObject.inertia">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UIDragObject" /> should use inertia.
             </summary>
             <value><c>true</c> if intertia; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UIDragObject.dampeningRate">
             <summary>
             Gets or sets the dampening rate for the inertia.
             </summary>
             <value>The dampening rate.</value>
            </member>
        <member name="P:DuloGames.UI.UIDragObject.constrainWithinCanvas">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UIDragObject" /> should be constrained within it's canvas.
             </summary>
             <value><c>true</c> if constrain within canvas; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:DuloGames.UI.UIDragObject.StopMovement">
             <summary>
             Stops the inertia movement.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIDragObject.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the begin drag event.
             </summary>
             <param name="data">Data.</param>
            </member>
        <member name="M:DuloGames.UI.UIDragObject.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the end drag event.
             </summary>
             <param name="data">Data.</param>
            </member>
        <member name="M:DuloGames.UI.UIDragObject.OnDrag(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the drag event.
             </summary>
             <param name="data">Data.</param>
            </member>
        <member name="M:DuloGames.UI.UIDragObject.LateUpdate">
             <summary>
             Lates the update.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIDragObject.Dampen(UnityEngine.Vector2@,System.Single,System.Single)">
             <summary>
             Dampen the specified velocity.
             </summary>
             <param name="velocity">Velocity.</param>
             <param name="strength">Strength.</param>
             <param name="delta">Delta.</param>
            </member>
        <member name="M:DuloGames.UI.UIDragObject.ClampToScreen(UnityEngine.Vector2)">
             <summary>
             Clamps to the screen.
             </summary>
             <returns>The to screen.</returns>
             <param name="position">Position.</param>
            </member>
        <member name="M:DuloGames.UI.UIDragObject.ClampToCanvas(UnityEngine.Vector2)">
             <summary>
             Clamps to the canvas.
             </summary>
             <returns>The to canvas.</returns>
             <param name="position">Position.</param>
            </member>
        <member name="M:DuloGames.UI.UIUtility.BringToFront(UnityEngine.GameObject)">
             <summary>
             Brings the game object to the front.
             </summary>
             <param name="go">Game Object.</param>
            </member>
        <member name="M:DuloGames.UI.UIUtility.BringToFront(UnityEngine.GameObject,System.Boolean)">
             <summary>
             Brings the game object to the front.
             </summary>
             <param name="go">The Game Object.</param>
             <param name="allowReparent">Should we allow the method to change the Game Object's parent.</param>
            </member>
        <member name="M:DuloGames.UI.UIUtility.FindInParents``1(UnityEngine.GameObject)">
             <summary>
             Finds the component in the game object's parents.
             </summary>
             <returns>The component.</returns>
             <param name="go">Game Object.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="T:DuloGames.UI.UIBlackOverlay">
             <summary>
             The black overlay used behind windows such as the game menu.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIBlackOverlay.Show">
             <summary>
             Instantly show the overlay.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIBlackOverlay.Hide">
             <summary>
             Instantly hide the overlay.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIBlackOverlay.IsActive">
             <summary>
             If the overlay is enabled and active in the hierarchy.
             </summary>
             <returns></returns>
            </member>
        <member name="M:DuloGames.UI.UIBlackOverlay.IsVisible">
             <summary>
             If the overlay is visible at all (alpha &gt; 0f).
             </summary>
             <returns></returns>
            </member>
        <member name="M:DuloGames.UI.UIBlackOverlay.OnTransitionBegin(DuloGames.UI.UIWindow,DuloGames.UI.UIWindow.VisualState,System.Boolean)">
             <summary>
             This method is hooked to the window on transition begin event.
             </summary>
             <param name="window">The window.</param>
             <param name="state">The window visual state that we are transitioning to.</param>
             <param name="instant">If the transition is instant or not.</param>
            </member>
        <member name="M:DuloGames.UI.UIBlackOverlay.GetOverlay(UnityEngine.GameObject)">
             <summary>
             Gets the black overlay based on relative game object. (In case we have multiple canvases.)
             </summary>
             <param name="relativeGameObject">The relative game object.</param>
             <returns>The black overlay component.</returns>
            </member>
        <member name="P:DuloGames.UI.UIBlackOverlayManager.prefab">
             <summary>
             Gets the black overlay prefab.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIBlackOverlayManager.Create(UnityEngine.Transform)">
             <summary>
             Creates a black overlay.
             </summary>
             <param name="parent">The transform parent.</param>
             <returns>The black overlay component.</returns>
            </member>
        <member name="P:DuloGames.UI.UIWindow.ID">
             <summary>
             Gets or sets the window identifier.
             </summary>
             <value>The window identifier.</value>
            </member>
        <member name="P:DuloGames.UI.UIWindow.CustomID">
             <summary>
             Gets or sets the custom window identifier.
             </summary>
             <value>The custom window identifier.</value>
            </member>
        <member name="P:DuloGames.UI.UIWindow.escapeKeyAction">
             <summary>
             Gets or sets the escape key action.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIWindow.useBlackOverlay">
             <summary>
             Gets or sets a value indicating whether this window should use the black overlay.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIWindow.focusAllowReparent">
             <summary>
             Allow re-parenting on focus.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIWindow.transition">
             <summary>
             Gets or sets the transition.
             </summary>
             <value>The transition.</value>
            </member>
        <member name="P:DuloGames.UI.UIWindow.transitionEasing">
             <summary>
             Gets or sets the transition easing.
             </summary>
             <value>The transition easing.</value>
            </member>
        <member name="P:DuloGames.UI.UIWindow.transitionDuration">
             <summary>
             Gets or sets the duration of the transition.
             </summary>
             <value>The duration of the transition.</value>
            </member>
        <member name="F:DuloGames.UI.UIWindow.onTransitionBegin">
             <summary>
             The transition begin (invoked when a transition begins).
             </summary>
            </member>
        <member name="F:DuloGames.UI.UIWindow.onTransitionComplete">
             <summary>
             The transition complete event (invoked when a transition completes).
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIWindow.IsVisible">
             <summary>
             Gets a value indicating whether this window is visible.
             </summary>
             <value><c>true</c> if this instance is visible; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UIWindow.IsOpen">
             <summary>
             Gets a value indicating whether this window is open.
             </summary>
             <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:DuloGames.UI.UIWindow.IsFocused">
             <summary>
             Gets a value indicating whether this instance is focused.
             </summary>
             <value><c>true</c> if this instance is focused; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:DuloGames.UI.UIWindow.IsActive">
             <summary>
             Determines whether this window is active.
             </summary>
             <returns><c>true</c> if this instance is active; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:DuloGames.UI.UIWindow.OnSelect(UnityEngine.EventSystems.BaseEventData)">
             <summary>
             Raises the select event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
             <summary>
             Raises the pointer down event.
             </summary>
             <param name="eventData">Event data.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.Focus">
             <summary>
             Focuses this window.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIWindow.BringToFront">
             <summary>
             Brings the window to the front.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIWindow.Toggle">
             <summary>
             Toggle the window Show/Hide.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIWindow.Show">
             <summary>
             Show the window.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIWindow.Show(System.Boolean)">
             <summary>
             Show the window.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.Hide">
             <summary>
             Hide the window.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIWindow.Hide(System.Boolean)">
             <summary>
             Hide the window.
             </summary>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.EvaluateAndTransitionToVisualState(DuloGames.UI.UIWindow.VisualState,System.Boolean)">
             <summary>
             Evaluates and transitions to the specified visual state.
             </summary>
             <param name="state">The state to transition to.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.ApplyInitialVisualState(DuloGames.UI.UIWindow.VisualState)">
             <summary>
             Applies the initial visual state.
             </summary>
             <param name="state">The state to transition to.</param>
             <param name="instant">If set to <c>true</c> instant.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.StartAlphaTween(System.Single,System.Single,System.Boolean)">
             <summary>
             Starts alpha tween.
             </summary>
             <param name="targetAlpha">Target alpha.</param>
             <param name="duration">Duration.</param>
             <param name="ignoreTimeScale">If set to <c>true</c> ignore time scale.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.SetCanvasAlpha(System.Single)">
             <summary>
             Sets the canvas alpha.
             </summary>
             <param name="alpha">Alpha.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.OnTweenFinished">
             <summary>
             Raises the list tween finished event.
             </summary>
            </member>
        <member name="M:DuloGames.UI.UIWindow.GetWindows">
             <summary>
             Get all the windows in the scene (Including inactive).
             </summary>
             <returns>The windows.</returns>
            </member>
        <member name="P:DuloGames.UI.UIWindow.NextUnusedCustomID">
             <summary>
             Gets the next unused custom ID for a window.
             </summary>
             <value>The next unused ID.</value>
            </member>
        <member name="M:DuloGames.UI.UIWindow.GetWindow(DuloGames.UI.UIWindowID)">
             <summary>
             Gets the window with the given ID.
             </summary>
             <returns>The window.</returns>
             <param name="id">Identifier.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.GetWindowByCustomID(System.Int32)">
             <summary>
             Gets the window with the given custom ID.
             </summary>
             <returns>The window.</returns>
             <param name="id">The custom identifier.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.FocusWindow(DuloGames.UI.UIWindowID)">
             <summary>
             Focuses the window with the given ID.
             </summary>
             <param name="id">Identifier.</param>
            </member>
        <member name="M:DuloGames.UI.UIWindow.OnBeforeFocusWindow(DuloGames.UI.UIWindow)">
             <summary>
             Raises the before focus window event.
             </summary>
             <param name="window">The window.</param>
            </member>
        <member name="P:DuloGames.UI.UIWindowManager.Instance">
             <summary>
             Gets the current instance of the window manager.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIWindowManager.escapeInputName">
             <summary>
             Gets the escape input name.
             </summary>
            </member>
        <member name="P:DuloGames.UI.UIWindowManager.escapedUsed">
             <summary>
             Gets a value indicating whether the escape input was used to hide a window in this frame.
             </summary>
            </member>
        <member name="M:CharacterCtrlBase.AnimationEvents">
             <summary>
             动画事件注册并且根据数据表动态匹配伤害逻辑
             </summary>
            </member>
        <member name="F:CharacterCtrlBase.BeHits">
             <summary>
             本次受击对象
             </summary>
            </member>
        <member name="M:CharacterCtrlBase.RadiusCastHit(System.Single,System.Single,System.Single)">
             <summary>
             扇形检测范围
             </summary>
             <param name="angle"></param>
             <param name="lookAccurate"></param>
             <param name="range"></param>
             <returns></returns>
            </member>
        <member name="M:CharacterCtrlBase.RadiusCastHitAll(System.Single,System.Single,System.Single)">
             <summary>
             扇形检测范围穿透
             </summary>
             <param name="angle"></param>
             <param name="lookAccurate"></param>
             <param name="range"></param>
             <returns></returns>
            </member>
        <member name="M:CharacterCtrlBase.CastRadiusRay(UnityEngine.Quaternion,System.Single,UnityEngine.RaycastHit@,UnityEngine.Color,System.Int32,System.Single,System.Single)">
             <summary>
             发送扇形体射线检测 
             </summary>
             <param name="eulerAngler">偏移角</param>
             <param name="range">发射距离</param>
             <param name="hit">碰撞信息</param>
             <param name="debugColor">debug颜色</param>
             <param name="yoffset">厚度</param>
             <param name="duration">debug持续时间</param>
             <returns></returns>
            </member>
        <member name="M:CharacterCtrlBase.CastRadiusRayAll(UnityEngine.Quaternion,System.Single,System.Collections.Generic.List{UnityEngine.RaycastHit}@,UnityEngine.Color,System.Int32,System.Single,System.Single)">
             <summary>
             发送扇形体射线检测穿透 
             </summary>
             <param name="eulerAngler">偏移角</param>
             <param name="range">发射距离</param>
             <param name="hit">碰撞信息</param>
             <param name="debugColor">debug颜色</param>
             <param name="yoffset">厚度</param>
             <param name="duration">debug持续时间</param>
             <returns></returns>
            </member>
        <member name="M:CharacterCtrlBase.CastSphereRayDirectionAll(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Int32)">
             <summary>
             发送球形射线指定方向 穿透所有
             </summary>
             <param name="localPos">相对坐标</param>
             <param name="range">范围</param>
             <param name="localDir">相对方向</param>
             <param name="Distance">距离</param>
             <param name="layMask">层级</param>
             <returns></returns>
            </member>
        <member name="M:CharacterCtrlBase.CastSphereRayDirection(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Int32)">
             <summary>
             发送球形射线指定方向 碰撞第一个消失
             </summary>
             <param name="localPos">相对坐标</param>
             <param name="range">范围</param>
             <param name="localDir">相对方向</param>
             <param name="Distance">距离</param>
             <param name="layMask">层级</param>
             <returns></returns>
            </member>
        <member name="F:CharacterCtrlBase.isJumpingUp">
             <summary>
             是否在往上跳
             </summary>
            </member>
        <member name="M:CharacterCtrlBase.CreateEffect(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.String,System.Single)">
             <summary>
             生成特效
             </summary>
             <param name="effect"></param>
             <param name="pos"></param>
             <param name="dir"></param>
             <param name="time"></param>
             <param name="angle"></param>
            </member>
        <member name="M:CharacterCtrlBase.CheckOnGround">
             <summary>
             检测是否落地
             </summary>
            </member>
        <member name="M:CharacterCtrlBase.FreezeFrame(System.Int32)">
             <summary>
             帧冻结 
             </summary>
            </member>
        <member name="F:EnemyPlayer.agent">
             <summary>
             寻路组件
             </summary>
            </member>
        <member name="F:EnemyPlayer.nmo">
             <summary>
             寻路遮挡物
             </summary>
            </member>
        <member name="M:SkillChainConfig.GetSkillChains(System.Int32)">
             <summary>
             获取指定技能组信息
             </summary>
             <param name="groupId"></param>
             <returns></returns>
            </member>
        <member name="M:HutongGames.PlayMaker.Actions.ButtonClickAction.FixChangeAnimationBug">
             <summary>
             由于状态跳转动画播放和状态机跳转之间会产生异步导致动画播放卡主，所以进行动画状态判断，如果当前状态动画名和播放不一样，重新播放一边
             </summary>
            </member>
        <member name="P:LuaEv.SMachine">
             <summary>
             获取Lua虚拟机 全局唯一
             </summary>
            </member>
        <member name="M:LuaEv.LuaGC">
             <summary>
             LuaGC
             </summary>
            </member>
        <member name="M:LuaEv.OnDispose">
             <summary>
             释放环境
             </summary>
            </member>
        <member name="M:Foo.UnsupportedMethod1``1(``0)">
             <summary>
             不支持生成lua的泛型方法（没有泛型约束）
             </summary>
            </member>
        <member name="M:Foo.UnsupportedMethod2``1">
             <summary>
             不支持生成lua的泛型方法（缺少带约束的泛型参数）
             </summary>
            </member>
        <member name="M:Foo.UnsupportedMethod3``1(``0)">
             <summary>
             不支持生成lua的泛型方法（泛型约束必须为class）
             </summary>
            </member>
        <member name="M:XLua.TemplateEngine.Parser.EscapeString(System.String)">
             <summary>
             Replaces special characters with their literal representation.
             </summary>
             <returns>Resulting string.</returns>
             <param name="input">Input string.</param>
            </member>
        <member name="M:XLua.TemplateEngine.Parser.Parse(System.String)">
             <summary>
             Parses the string into regex groups, 
             stores group:value pairs in List of Chunk
             <returns>List of group:value pairs.</returns>;
             </summary>
            </member>
    </members>
</doc>
